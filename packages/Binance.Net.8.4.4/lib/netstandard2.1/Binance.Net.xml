<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Binance.Net</name>
    </assembly>
    <members>
        <member name="T:Binance.Net.BinanceHelpers">
            <summary>
            Helper methods for the Binance API
            </summary>
        </member>
        <member name="M:Binance.Net.BinanceHelpers.UsedWeight(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Get the used weight from the response headers
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.BinanceHelpers.UsedOrderCount(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Get the used weight from the response headers
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.BinanceHelpers.ClampQuantity(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Clamp a quantity between a min and max quantity and floor to the closest step
            </summary>
            <param name="minQuantity"></param>
            <param name="maxQuantity"></param>
            <param name="stepSize"></param>
            <param name="quantity"></param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.BinanceHelpers.ClampPrice(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Clamp a price between a min and max price
            </summary>
            <param name="minPrice"></param>
            <param name="maxPrice"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.BinanceHelpers.FloorPrice(System.Decimal,System.Decimal)">
            <summary>
            Floor a price to the closest tick
            </summary>
            <param name="tickSize"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.BinanceHelpers.Floor(System.Decimal)">
            <summary>
            Floor
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.BinanceHelpers.AddBinance(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Binance.Net.Objects.BinanceClientOptions,Binance.Net.Objects.BinanceSocketClientOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            Add the IBinanceClient and IBinanceSocketClient to the sevice collection so they can be injected
            </summary>
            <param name="services">The service collection</param>
            <param name="defaultOptionsCallback">Set default options for the client</param>
            <param name="socketClientLifeTime">The lifetime of the IBinanceSocketClient for the service collection. Defaults to Scoped.</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.BinanceHelpers.ValidateBinanceSymbol(System.String)">
            <summary>
            Validate the string is a valid Binance symbol.
            </summary>
            <param name="symbolString">string to validate</param>
        </member>
        <member name="T:Binance.Net.Clients.BinanceClient">
            <inheritdoc cref="T:Binance.Net.Interfaces.Clients.IBinanceClient" />
        </member>
        <member name="P:Binance.Net.Clients.BinanceClient.GeneralApi">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.BinanceClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.BinanceClient.UsdFuturesApi">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.BinanceClient.CoinFuturesApi">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.BinanceClient.#ctor">
            <summary>
            Create a new instance of BinanceClient using the default options
            </summary>
        </member>
        <member name="M:Binance.Net.Clients.BinanceClient.#ctor(Binance.Net.Objects.BinanceClientOptions)">
            <summary>
            Create a new instance of BinanceClient using provided options
            </summary>
            <param name="options">The options to use for this client</param>
        </member>
        <member name="M:Binance.Net.Clients.BinanceClient.SetDefaultOptions(Binance.Net.Objects.BinanceClientOptions)">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="options">Options to use as default</param>
        </member>
        <member name="M:Binance.Net.Clients.BinanceClient.SetApiCredentials(Binance.Net.Objects.BinanceApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.BinanceSocketClient">
            <inheritdoc cref="T:Binance.Net.Interfaces.Clients.IBinanceSocketClient" />
        </member>
        <member name="P:Binance.Net.Clients.BinanceSocketClient.SpotStreams">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.BinanceSocketClient.UsdFuturesStreams">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.BinanceSocketClient.CoinFuturesStreams">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.BinanceSocketClient.#ctor">
            <summary>
            Create a new instance of BinanceSocketClientSpot with default options
            </summary>
        </member>
        <member name="M:Binance.Net.Clients.BinanceSocketClient.#ctor(Binance.Net.Objects.BinanceSocketClientOptions)">
            <summary>
            Create a new instance of BinanceSocketClientSpot using provided options
            </summary>
            <param name="options">The options to use for this client</param>
        </member>
        <member name="M:Binance.Net.Clients.BinanceSocketClient.SetDefaultOptions(Binance.Net.Objects.BinanceSocketClientOptions)">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="options">Options to use as default</param>
        </member>
        <member name="M:Binance.Net.Clients.BinanceSocketClient.SetApiCredentials(Binance.Net.Objects.BinanceApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi">
            <inheritdoc cref="T:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApi" />
        </member>
        <member name="P:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="E:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.OnOrderPlaced">
            <summary>
            Event triggered when an order is placed via this client. Only available for Spot orders
            </summary>
        </member>
        <member name="E:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.OnOrderCanceled">
            <summary>
            Event triggered when an order is canceled via this client. Note that this does not trigger when using CancelAllOrdersAsync. Only available for Spot orders
            </summary>
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.CommonFuturesClient">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.GetSymbolName(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApi.ParseErrorResponse(Newtonsoft.Json.Linq.JToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.ModifyPositionModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.GetPositionModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.ChangeInitialLeverageAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.ChangeMarginTypeAsync(System.String,Binance.Net.Enums.FuturesMarginType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.ModifyPositionMarginAsync(System.String,System.Decimal,Binance.Net.Enums.FuturesMarginChangeDirectionType,System.Nullable{Binance.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.GetMarginChangeHistoryAsync(System.String,System.Nullable{Binance.Net.Enums.FuturesMarginChangeDirectionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.GetIncomeHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.GetBracketsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.GetPositionAdlQuantileEstimationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.GetBalancesAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.GetPositionInformationAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiAccount.GetUserCommissionRateAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetServerTimeAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetFundingRatesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetTopLongShortAccountRatioAsync(System.String,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetTopLongShortPositionRatioAsync(System.String,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetGlobalLongShortAccountRatioAsync(System.String,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetMarkPriceKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetMarkPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetContinuousContractKlinesAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetIndexPriceKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetTickersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetBookPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetOpenInterestAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetOpenInterestHistoryAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetTakerBuySellVolumeRatioAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetBasisAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiExchangeData.GetPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.PlaceOrderAsync(System.String,Binance.Net.Enums.OrderSide,Binance.Net.Enums.FuturesOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.PositionSide},System.Nullable{Binance.Net.Enums.TimeInForce},System.Nullable{System.Boolean},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.WorkingType},System.Nullable{System.Boolean},System.Nullable{Binance.Net.Enums.OrderResponseType},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.PlaceMultipleOrdersAsync(Binance.Net.Objects.Models.Futures.BinanceFuturesBatchOrder[],System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.CancelAllOrdersAfterTimeoutAsync(System.String,System.TimeSpan,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.CancelMultipleOrdersAsync(System.String,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.GetOpenOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.GetForcedOrdersAsync(System.String,System.Nullable{Binance.Net.Enums.AutoCloseType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceClientCoinFuturesApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams">
            <inheritdoc cref="T:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams" />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToKlineUpdatesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{Binance.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Binance.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToIndexPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamIndexPrice}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToIndexPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamIndexPrice}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToMarkPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesCoinStreamMarkPrice}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToMarkPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesCoinStreamMarkPrice}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToContinuousContractKlineUpdatesAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToContinuousContractKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.ContractType,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToIndexKlineUpdatesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceStreamIndexKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToIndexKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceStreamIndexKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToMarkPriceKlineUpdatesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceStreamIndexKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToMarkPriceKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceStreamIndexKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToAllMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Interfaces.IBinanceMiniTick}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinance24HPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinance24HPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToAllTickerUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Interfaces.IBinance24HPrice}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToAllBookTickerUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToAllLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamConfigUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamMarginUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamAccountUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamOrderUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.BinanceStreamEvent}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.HandleQueryResponse``1(CryptoExchange.Net.Sockets.SocketConnection,System.Object,Newtonsoft.Json.Linq.JToken,CryptoExchange.Net.Objects.CallResult{``0}@)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.HandleSubscriptionResponse(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Sockets.SocketSubscription,System.Object,Newtonsoft.Json.Linq.JToken,CryptoExchange.Net.Objects.CallResult{System.Object}@)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.MessageMatchesHandler(CryptoExchange.Net.Sockets.SocketConnection,Newtonsoft.Json.Linq.JToken,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.MessageMatchesHandler(CryptoExchange.Net.Sockets.SocketConnection,Newtonsoft.Json.Linq.JToken,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.AuthenticateSocketAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.CoinFuturesApi.BinanceSocketClientCoinFuturesStreams.UnsubscribeAsync(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Sockets.SocketSubscription)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi">
            <inheritdoc cref="T:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApi" />
        </member>
        <member name="P:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi.Brokerage">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi.Futures">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi.Savings">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi.CryptoLoans">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi.Mining">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi.SubAccount">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApi.ParseErrorResponse(Newtonsoft.Json.Linq.JToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.CreateSubAccountAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetSubAccountsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.EnableMarginForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.EnableFuturesForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.EnableLeverageTokenForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.CreateApiKeyForSubAccountAsync(System.String,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.DeleteSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.ChangeSubAccountApiKeyPermissionAsync(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.AddIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.ChangeIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.DeleteIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.ChangeSubAccountCommissionAsync(System.String,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.ChangeSubAccountFuturesCommissionAdjustmentAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetSubAccountFuturesCommissionAdjustmentAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.ChangeSubAccountCoinFuturesCommissionAdjustmentAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetSubAccountCoinFuturesCommissionAdjustmentAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetSubAccountSpotAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetSubAccountMarginAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetSubAccountFuturesAssetInfoAsync(Binance.Net.Objects.Models.Spot.Brokerage.SubAccountData.BinanceBrokerageFuturesType,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.ChangeBnbBurnForSubAccountSpotAndMarginAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.ChangeBnbBurnForSubAccountMarginInterestAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetBnbBurnStatusForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.TransferUniversalAsync(System.String,System.Decimal,System.String,Binance.Net.Enums.BrokerageAccountType,System.String,Binance.Net.Enums.BrokerageAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetTransferHistoryUniversalAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.TransferAsync(System.String,System.Decimal,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.TransferFuturesAsync(System.String,System.Decimal,Binance.Net.Objects.Models.Spot.Brokerage.SubAccountData.BinanceBrokerageFuturesType,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetTransferHistoryAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetTransferFuturesHistoryAsync(System.String,Binance.Net.Objects.Models.Spot.Brokerage.SubAccountData.BinanceBrokerageFuturesType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetSubAccountDepositHistoryAsync(System.String,System.String,System.Nullable{Binance.Net.Objects.Models.Spot.Brokerage.SubAccountData.BinanceBrokerageSubAccountDepositStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetBrokerAccountInfoAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetBrokerCommissionRebatesRecentAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiBrokerage.GetBrokerFuturesCommissionRebatesHistoryAsync(Binance.Net.Objects.Models.Spot.Brokerage.SubAccountData.BinanceBrokerageFuturesType,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.TransferFuturesAccountAsync(System.String,System.Decimal,Binance.Net.Enums.FuturesTransferType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.GetFuturesTransferHistoryAsync(System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.BorrowForCrossCollateralAsync(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.GetCrossCollateralBorrowHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.RepayForCrossCollateralAsync(System.String,System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.GetCrossCollateralRepayHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.GetCrossCollateralWalletAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.GetCrossCollateralInformationAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.GetRateAfterAdjustLoanToValueAsync(System.String,System.String,System.Decimal,Binance.Net.Enums.AdjustRateDirection,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.GetMaxAmountForAdjustCrossCollateralLoanToValueAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.AdjustCrossCollateralLoanToValueAsync(System.String,System.String,System.Decimal,Binance.Net.Enums.AdjustRateDirection,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.GetAdjustCrossCollateralLoanToValueHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiFutures.GetCrossCollateralLiquidationHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiCryptoLoans">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiCryptoLoans.GetIncomeHistoryAsync(System.String,System.Nullable{Binance.Net.Enums.LoanIncomeType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiCryptoLoans.BorrowAsync(System.String,System.String,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiCryptoLoans.GetBorrowHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiCryptoLoans.GetOpenBorrowOrdersAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiCryptoLoans.RepayAsync(System.Int64,System.Decimal,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiCryptoLoans.GetRepayHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiCryptoLoans.AdjustLTVAsync(System.Int64,System.Decimal,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiCryptoLoans.GetLtvAdjustHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.GetMiningCoinListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.GetMiningAlgorithmListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.GetMinerDetailsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.GetMinerListAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{Binance.Net.Enums.MinerStatus},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.GetMiningRevenueListAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.GetMiningOtherRevenueListAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.GetMiningStatisticsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.GetMiningAccountListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.GetHashrateResaleListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.GetHashrateResaleDetailsAsync(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.PlaceHashrateResaleRequestAsync(System.String,System.String,System.DateTime,System.DateTime,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiMining.CancelHashrateResaleRequestAsync(System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.GetFlexibleProductListAsync(System.Nullable{Binance.Net.Enums.ProductStatus},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.GetLeftDailyPurchaseQuotaOfFlexableProductAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.PurchaseFlexibleProductAsync(System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.GetLeftDailyRedemptionQuotaOfFlexibleProductAsync(System.String,Binance.Net.Enums.RedeemType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.RedeemFlexibleProductAsync(System.String,System.Decimal,Binance.Net.Enums.RedeemType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.GetFlexibleProductPositionAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.GetFixedAndCustomizedFixedProjectListAsync(Binance.Net.Enums.ProjectType,System.String,System.Nullable{Binance.Net.Enums.ProductStatus},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.PurchaseCustomizedFixedProjectAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.GetCustomizedFixedProjectPositionsAsync(System.String,System.String,System.Nullable{Binance.Net.Enums.ProjectStatus},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.GetLendingAccountAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.GetPurchaseRecordsAsync(Binance.Net.Enums.LendingType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.GetRedemptionRecordsAsync(Binance.Net.Enums.LendingType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.GetLendingInterestHistoryAsync(Binance.Net.Enums.LendingType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSavings.ChangeToDailyPositionAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountTransferHistoryForMasterAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.TransferSubAccountAsync(Binance.Net.Enums.TransferAccountType,Binance.Net.Enums.TransferAccountType,System.String,System.Decimal,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountAssetsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountDepositAddressAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountDepositHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountStatusAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.EnableMarginForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountMarginDetailsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountsMarginSummaryAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.EnableFuturesForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountFuturesDetailsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountFuturesDetailsAsync(Binance.Net.Enums.FuturesAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountsFuturesSummaryAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountsFuturesPositionRiskAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountsFuturesPositionRiskAsync(Binance.Net.Enums.FuturesAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.TransferSubAccountFuturesAsync(System.String,System.String,System.Decimal,Binance.Net.Enums.SubAccountFuturesTransferType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.TransferSubAccountMarginAsync(System.String,System.String,System.Decimal,Binance.Net.Enums.SubAccountMarginTransferType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.TransferSubAccountToSubAccountAsync(System.String,System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.TransferSubAccountToMasterAsync(System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountTransferHistoryForSubAccountAsync(System.String,System.Nullable{Binance.Net.Enums.SubAccountTransferSubAccountType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetSubAccountBtcValuesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.CreateVirtualSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.EnableBlvtForSubAccountAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetUniversalTransferHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.UpdateIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.RemoveIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.GeneralApi.BinanceClientGeneralApiSubAccount.GetIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.SpotApi.BinanceClientSpotApi">
            <inheritdoc cref="T:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApi" />
        </member>
        <member name="P:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="E:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.OnOrderPlaced">
            <summary>
            Event triggered when an order is placed via this client. Only available for Spot orders
            </summary>
        </member>
        <member name="E:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.OnOrderCanceled">
            <summary>
            Event triggered when an order is canceled via this client. Note that this does not trigger when using CancelAllOrdersAsync. Only available for Spot orders
            </summary>
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.CommonSpotClient">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.GetSymbolName(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApi.ParseErrorResponse(Newtonsoft.Json.Linq.JToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetFiatPaymentHistoryAsync(Binance.Net.Enums.OrderSide,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetFiatDepositWithdrawHistoryAsync(Binance.Net.Enums.TransactionType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{Binance.Net.Enums.WalletType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetWithdrawalHistoryAsync(System.String,System.String,System.Nullable{Binance.Net.Enums.WithdrawalStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetDepositHistoryAsync(System.String,System.Nullable{Binance.Net.Enums.DepositStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetDepositAddressAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetDailySpotAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetDailyMarginAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetDailyFutureAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetAccountStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetFundingWalletAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetAPIKeyPermissionsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetUserAssetsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetBalancesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetAssetDividendRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.DisableFastWithdrawSwitchAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.EnableFastWithdrawSwitchAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetDustLogAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.DustTransferAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetAssetsForDustTransferAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetBnbBurnStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.SetBnbBurnStatusAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.TransferAsync(Binance.Net.Enums.UniversalTransferType,System.String,System.Decimal,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetTransfersAsync(Binance.Net.Enums.UniversalTransferType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetMarginLevelInformationAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.CrossMarginTransferAsync(System.String,System.Decimal,Binance.Net.Enums.TransferDirectionType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.MarginBorrowAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.MarginRepayAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetMarginDustLogAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetCrossMarginTransferHistoryAsync(Binance.Net.Enums.TransferDirection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetMarginLoansAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetMarginRepaysAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetInterestMarginDataAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetMarginInterestHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetMarginInterestRateHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetMarginForcedLiquidationHistoryAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetIsolatedMarginTierDataAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetMarginAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetMarginMaxBorrowAmountAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetMarginMaxTransferAmountAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetIsolatedMarginAccountTransferHistoryAsync(System.String,System.String,System.Nullable{Binance.Net.Enums.IsolatedMarginTransferDirection},System.Nullable{Binance.Net.Enums.IsolatedMarginTransferDirection},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetIsolatedMarginAccountAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.DisableIsolatedMarginAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.EnableIsolatedMarginAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetEnabledIsolatedMarginAccountLimitAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.IsolatedMarginAccountTransferAsync(System.String,System.String,Binance.Net.Enums.IsolatedMarginTransferDirection,Binance.Net.Enums.IsolatedMarginTransferDirection,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetMarginOrderRateLimitStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.StartMarginUserStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.KeepAliveMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.StopMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.StartIsolatedMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.KeepAliveIsolatedMarginUserStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.CloseIsolatedMarginUserStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetTradingStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetOrderRateLimitStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetRebateHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetLeveragedTokensUserLimitAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.SetAutoStakingAsync(Binance.Net.Enums.StakingProductType,System.String,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetStakingPersonalQuotaAsync(Binance.Net.Enums.StakingProductType,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetPortfolioMarginAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetPortfolioMarginCollateralRateAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.GetPortfolioMarginBankruptcyLoanAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiAccount.PortfolioMarginBankruptcyLoanRepayAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetExchangeInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetExchangeInfoAsync(Binance.Net.Enums.AccountType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetExchangeInfoAsync(Binance.Net.Enums.AccountType[],System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetExchangeInfoAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetSystemStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetAssetDetailsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetProductsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetUiKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetCurrentAvgPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetRollingWindowTickerAsync(System.String,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetRollingWindowTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetPricesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetBookPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetBookPricesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetBookPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetTradeFeeAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetMarginAssetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetMarginSymbolAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetMarginAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetMarginSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetMarginPriceIndexAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetIsolatedMarginSymbolAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetIsolatedMarginSymbolsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetLeveragedTokenInfoAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetLeveragedTokensHistoricalKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetLiquidityPoolsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetLiquidityPoolConfigurationAsync(System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiExchangeData.GetStakingProductsAsync(Binance.Net.Enums.StakingProductType,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.PlaceTestOrderAsync(System.String,Binance.Net.Enums.OrderSide,Binance.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.PlaceOrderAsync(System.String,Binance.Net.Enums.OrderSide,Binance.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.ReplaceOrderAsync(System.String,Binance.Net.Enums.OrderSide,Binance.Net.Enums.SpotOrderType,Binance.Net.Enums.CancelReplaceMode,System.Nullable{System.Int64},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.PlaceOcoOrderAsync(System.String,Binance.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.CancelOcoOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetOcoOrderAsync(System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetOcoOrdersAsync(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetOpenOcoOrdersAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.PlaceMarginOrderAsync(System.String,Binance.Net.Enums.OrderSide,Binance.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.SideEffectType},System.Nullable{System.Boolean},System.Nullable{Binance.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.CancelMarginOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.CancelAllMarginOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetMarginOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetOpenMarginOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetMarginOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetMarginUserTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.PlaceMarginOCOOrderAsync(System.String,Binance.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.SideEffectType},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{Binance.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.CancelMarginOcoOrderAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetMarginOcoOrderAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetMarginOcoOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetMarginOpenOcoOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.SubscribeLeveragedTokenAsync(System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetLeveragedTokensSubscriptionRecordsAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.RedeemLeveragedTokenAsync(System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetLeveragedTokensRedemptionRecordsAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.AddToLiquidityPoolAsync(System.Int32,System.String,System.Decimal,System.Nullable{Binance.Net.Enums.LiquidityType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.RemoveFromLiquidityPoolAsync(System.Int32,System.String,Binance.Net.Enums.LiquidityType,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetLiquidityPoolOperationRecordsAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{Binance.Net.Enums.BSwapOperation},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetLiquidityPoolSwapQuoteAsync(System.String,System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.LiquidityPoolSwapAsync(System.String,System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetLiquidityPoolSwapHistoryAsync(System.Nullable{System.Int64},System.Nullable{Binance.Net.Enums.BSwapStatus},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.AddToLiquidityPoolPreviewAsync(System.Int32,System.String,System.Decimal,Binance.Net.Enums.LiquidityType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.RemoveFromLiquidityPoolPreviewAsync(System.Int32,System.String,System.Decimal,Binance.Net.Enums.LiquidityType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetLiquidityPoolInfoAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetC2CTradeHistoryAsync(Binance.Net.Enums.OrderSide,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetPayTradeHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetConvertTradeHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.PurchaseStakingProductAsync(Binance.Net.Enums.StakingProductType,System.String,System.Decimal,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.RedeemStakingProductAsync(Binance.Net.Enums.StakingProductType,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetStakingPositionsAsync(Binance.Net.Enums.StakingProductType,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetStakingHistoryAsync(Binance.Net.Enums.StakingProductType,Binance.Net.Enums.StakingTransactionType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.ConvertTransferAsync(System.String,System.String,System.Decimal,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceClientSpotApiTrading.GetConvertTransferHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.#ctor(CryptoExchange.Net.Logging.Log,Binance.Net.Objects.BinanceSocketClientOptions)">
            <summary>
            Create a new instance of BinanceSocketClientSpot with default options
            </summary>
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToKlineUpdatesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{Binance.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Binance.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToAllMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Interfaces.IBinanceMiniTick}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToRollingWindowTickerUpdatesAsync(System.String,System.TimeSpan,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamRollingWindowTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToAllRollingWindowTickerUpdatesAsync(System.TimeSpan,System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamRollingWindowTick}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToAllTickerUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Interfaces.IBinanceTick}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamOrderUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamOrderList}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamPositionsUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamBalanceUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToBlvtInfoUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Blvt.BinanceBlvtInfoUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToBlvtInfoUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Blvt.BinanceBlvtInfoUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToBlvtKlineUpdatesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.SubscribeToBlvtKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.HandleQueryResponse``1(CryptoExchange.Net.Sockets.SocketConnection,System.Object,Newtonsoft.Json.Linq.JToken,CryptoExchange.Net.Objects.CallResult{``0}@)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.HandleSubscriptionResponse(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Sockets.SocketSubscription,System.Object,Newtonsoft.Json.Linq.JToken,CryptoExchange.Net.Objects.CallResult{System.Object}@)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.MessageMatchesHandler(CryptoExchange.Net.Sockets.SocketConnection,Newtonsoft.Json.Linq.JToken,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.MessageMatchesHandler(CryptoExchange.Net.Sockets.SocketConnection,Newtonsoft.Json.Linq.JToken,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.AuthenticateSocketAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.SpotApi.BinanceSocketClientSpotStreams.UnsubscribeAsync(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Sockets.SocketSubscription)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi">
            <inheritdoc cref="T:Binance.Net.Interfaces.Clients.UsdFuturesApi.IBinanceClientUsdFuturesApi" />
        </member>
        <member name="P:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.Account">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="E:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.OnOrderPlaced">
            <summary>
            Event triggered when an order is placed via this client. Only available for Spot orders
            </summary>
        </member>
        <member name="E:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.OnOrderCanceled">
            <summary>
            Event triggered when an order is canceled via this client. Note that this does not trigger when using CancelAllOrdersAsync. Only available for Spot orders
            </summary>
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="P:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.CommonFuturesClient">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.GetSymbolName(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApi.ParseErrorResponse(Newtonsoft.Json.Linq.JToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.ModifyPositionModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetPositionModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.ChangeInitialLeverageAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.ChangeMarginTypeAsync(System.String,Binance.Net.Enums.FuturesMarginType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.ModifyPositionMarginAsync(System.String,System.Decimal,Binance.Net.Enums.FuturesMarginChangeDirectionType,System.Nullable{Binance.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetMarginChangeHistoryAsync(System.String,System.Nullable{Binance.Net.Enums.FuturesMarginChangeDirectionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetIncomeHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetBracketsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetPositionAdlQuantileEstimationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetBalancesAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetMultiAssetsModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.SetMultiAssetsModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetPositionInformationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetTradingStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetUserCommissionRateAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetDownloadIdForTransactionHistoryAsync(System.DateTime,System.DateTime,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiAccount.GetDownloadLinkForTransactionHistoryAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetServerTimeAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetFundingRatesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetTopLongShortAccountRatioAsync(System.String,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetTopLongShortPositionRatioAsync(System.String,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetGlobalLongShortAccountRatioAsync(System.String,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetMarkPriceKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetMarkPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetMarkPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetBookPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetBookPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetOpenInterestAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetOpenInterestHistoryAsync(System.String,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetTakerBuySellVolumeRatioAsync(System.String,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetCompositeIndexInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetContinuousContractKlinesAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetIndexPriceKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetAssetIndexesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiExchangeData.GetAssetIndexAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.PlaceOrderAsync(System.String,Binance.Net.Enums.OrderSide,Binance.Net.Enums.FuturesOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.PositionSide},System.Nullable{Binance.Net.Enums.TimeInForce},System.Nullable{System.Boolean},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.WorkingType},System.Nullable{System.Boolean},System.Nullable{Binance.Net.Enums.OrderResponseType},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.PlaceMultipleOrdersAsync(Binance.Net.Objects.Models.Futures.BinanceFuturesBatchOrder[],System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.CancelAllOrdersAfterTimeoutAsync(System.String,System.TimeSpan,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.CancelMultipleOrdersAsync(System.String,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.GetOpenOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.GetForcedOrdersAsync(System.String,System.Nullable{Binance.Net.Enums.AutoCloseType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.GetUserTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.PlaceVolumeParticipationOrderAsync(System.String,Binance.Net.Enums.OrderSide,System.Decimal,Binance.Net.Enums.OrderUrgency,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.PlaceTimeWeightedAveragePriceOrderAsync(System.String,Binance.Net.Enums.OrderSide,System.Decimal,System.Int32,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.CancelAlgoOrderAsync(System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.GetOpenAlgoOrdersAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.GetClosedAlgoOrdersAsync(System.String,System.Nullable{Binance.Net.Enums.OrderSide},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceClientUsdFuturesApiTrading.GetAlgoSubOrdersAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams">
            <summary>
            Client providing access to the Binance Usd futures websocket Api
            </summary>
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.#ctor(CryptoExchange.Net.Logging.Log,Binance.Net.Objects.BinanceSocketClientOptions)">
            <summary>
            Create a new instance of BinanceSocketClientSpot with default options
            </summary>
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToMarkPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesUsdtStreamMarkPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToMarkPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesUsdtStreamMarkPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToAllMarkPriceUpdatesAsync(System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesUsdtStreamMarkPrice}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToKlineUpdatesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{Binance.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Binance.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToContinuousContractKlineUpdatesAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceStreamContinuousKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToContinuousContractKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.ContractType,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceStreamContinuousKlineData}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceMiniTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToAllMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Interfaces.IBinanceMiniTick}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinance24HPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinance24HPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToCompositeIndexUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamCompositeIndex}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToAllTickerUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Interfaces.IBinance24HPrice}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToAllBookTickerUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamBookPrice}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToAllLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamConfigUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamMarginUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamAccountUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamOrderUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.BinanceStreamEvent}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceStrategyUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceGridUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.HandleQueryResponse``1(CryptoExchange.Net.Sockets.SocketConnection,System.Object,Newtonsoft.Json.Linq.JToken,CryptoExchange.Net.Objects.CallResult{``0}@)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.HandleSubscriptionResponse(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Sockets.SocketSubscription,System.Object,Newtonsoft.Json.Linq.JToken,CryptoExchange.Net.Objects.CallResult{System.Object}@)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.MessageMatchesHandler(CryptoExchange.Net.Sockets.SocketConnection,Newtonsoft.Json.Linq.JToken,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.MessageMatchesHandler(CryptoExchange.Net.Sockets.SocketConnection,Newtonsoft.Json.Linq.JToken,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.AuthenticateSocketAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:Binance.Net.Clients.UsdFuturesApi.BinanceSocketClientUsdFuturesStreams.UnsubscribeAsync(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Sockets.SocketSubscription)">
            <inheritdoc />
        </member>
        <member name="T:Binance.Net.Enums.AccountType">
            <summary>
            Type of account
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.Spot">
            <summary>
            Spot account type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.Margin">
            <summary>
            Margin account type
            </summary>>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.Futures">
            <summary>
            Futures account type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.Leveraged">
            <summary>
            Leveraged account type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.TradeGroup002">
            <summary>
            Trade group 2
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.TradeGroup003">
            <summary>
            Trade group 3
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.TradeGroup004">
            <summary>
            Trade group 4
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.TradeGroup005">
            <summary>
            Trade group 5
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.TradeGroup006">
            <summary>
            Trade group 6
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.TradeGroup007">
            <summary>
            Trade group 7
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.TradeGroup008">
            <summary>
            Trade group 8
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountType.TradeGroup009">
            <summary>
            Trade group 9
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.AccountUpdateReason">
            <summary>
            Account update reason
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.FundingFee">
            <summary>
            Funding Fee
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.WithdrawReject">
            <summary>
            Withdraw Reject
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.Adjustment">
            <summary>
            Adjustment
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.InsuranceClear">
            <summary>
            Insurance Clear
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.AdminDeposit">
            <summary>
            Admin Deposit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.AdminWithdraw">
            <summary>
            Admin Withdraw
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.MarginTransfer">
            <summary>
            Margin Transfer
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.MarginTypeChange">
            <summary>
            Margin Type Change
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.AssetTransfer">
            <summary>
             Asset Transfer
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.OptionsPremiumFee">
            <summary>
            Options Premium Fee
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.OptionsSettleProfit">
            <summary>
            Options Settle Profit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.CoinSwapWithdraw">
            <summary>
            Coin swap withdraw
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AccountUpdateReason.CoinSwapDeposit">
            <summary>
            Coin swap deposit
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.AdjustRateDirection">
            <summary>
            Rate direction
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AdjustRateDirection.Additional">
            <summary>
            Additional
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AdjustRateDirection.Reduced">
            <summary>
            Reduced
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.AutoCloseType">
            <summary>
            Type of auto close
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AutoCloseType.ADL">
            <summary>
            ADL
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.AutoCloseType.Liquidation">
            <summary>
            Liquidation
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.BinanceEarningType">
            <summary>
            Mining earnings type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BinanceEarningType.MiningWallet">
            <summary>
            Mining wallet
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BinanceEarningType.MergedMining">
            <summary>
            Merged mining
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BinanceEarningType.ActivityBonus">
            <summary>
            Activity bonus
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BinanceEarningType.Rebate">
            <summary>
            Rebate
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BinanceEarningType.SmartPool">
            <summary>
            Smart pool
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BinanceEarningType.MiningAddress">
            <summary>
            Mining address
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BinanceEarningType.PoolSavings">
            <summary>
            Pool savings
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BinanceEarningType.Transfered">
            <summary>
            Transfered
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BinanceEarningType.IncomeTransfer">
            <summary>
            Income transfer
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BinanceEarningType.HashrateResaleMiningWallet">
            <summary>
            Hashrate resale - mining wallet
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BinanceEarningType.HashrateResalePoolSavings">
            <summary>
            Hashrate resale - pool savings
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.BlvtStatus">
            <summary>
            Status of a blvt action
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BlvtStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BlvtStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BlvtStatus.Failure">
            <summary>
            Failure
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.BorrowStatus">
            <summary>
            Borrow status
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BorrowStatus.AccruingInterest">
            <summary>
            Accruing interest
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BorrowStatus.Overdeu">
            <summary>
            Overdue
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BorrowStatus.Liquidating">
            <summary>
            Currently liquidating
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BorrowStatus.Repaying">
            <summary>
            Repaying
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BorrowStatus.Repaid">
            <summary>
            Repaid
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BorrowStatus.Liquidated">
            <summary>
            Liquidated
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BorrowStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BorrowStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.BrokerageAccountType">
            <summary>
            Brokerage account type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BrokerageAccountType.Spot">
            <summary> Spot </summary>
        </member>
        <member name="F:Binance.Net.Enums.BrokerageAccountType.FuturesUsdt">
            <summary> Futures USDT </summary>
        </member>
        <member name="F:Binance.Net.Enums.BrokerageAccountType.FuturesCoin">
            <summary> Futures Coin </summary>
        </member>
        <member name="T:Binance.Net.Enums.BrokerageTransferTransactionStatus">
            <summary>
            Brokerage transfer transaction status
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BrokerageTransferTransactionStatus.Init">
            <summary> Init </summary>
        </member>
        <member name="F:Binance.Net.Enums.BrokerageTransferTransactionStatus.Process">
            <summary> Process </summary>
        </member>
        <member name="F:Binance.Net.Enums.BrokerageTransferTransactionStatus.Success">
            <summary> Success </summary>
        </member>
        <member name="F:Binance.Net.Enums.BrokerageTransferTransactionStatus.Failure">
            <summary> Failure </summary>
        </member>
        <member name="T:Binance.Net.Enums.BSwapOperation">
            <summary>
            Swap operation
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BSwapOperation.Add">
            <summary>
            Add liquidity
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BSwapOperation.Remove">
            <summary>
            Remove liquidity
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.BSwapStatus">
            <summary>
            Status of a BSwap operation
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BSwapStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BSwapStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.BSwapStatus.Failure">
            <summary>
            Failure
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.C2COrderStatus">
            <summary>
            C2C order status
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.C2COrderStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.C2COrderStatus.Trading">
            <summary>
            Trading
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.C2COrderStatus.BuyerPayed">
            <summary>
            Buyer has paid
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.C2COrderStatus.Distributing">
            <summary>
            Distributing
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.C2COrderStatus.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.C2COrderStatus.InAppeal">
            <summary>
            In appeal
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.C2COrderStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.C2COrderStatus.CanceledBySystem">
            <summary>
            CanceledBySystem
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.CancelReplaceMode">
            <summary>
            Cancel replace mode
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.CancelReplaceMode.StopOnFailure">
            <summary>
            If the cancel request fails, the new order placement will not be attempted.
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.CancelReplaceMode.AllowFailure">
            <summary>
            New order placement will be attempted even if cancel request fails.
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.ContractType">
            <summary>
            Type of contract
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ContractType.Perpetual">
            <summary>
            Perpetual
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ContractType.CurrentMonth">
            <summary>
            Current month
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ContractType.CurrentQuarter">
            <summary>
            Current quarter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ContractType.CurrentQuarterDelivering">
            <summary>
            Current quarter delivering
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ContractType.NextQuarter">
            <summary>
            Next quarter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ContractType.NextQuarterDelivering">
            <summary>
            Next quarter delivering
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ContractType.NextMonth">
            <summary>
            Next month
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ContractType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.DepositStatus">
            <summary>
            The status of a deposit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.DepositStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.DepositStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.DepositStatus.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.DownloadStatus">
            <summary>
            Download status
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.DownloadStatus.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.DownloadStatus.Completed">
            <summary>
            Ready for download
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.ExecutionType">
            <summary>
            The type of execution
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ExecutionType.New">
            <summary>
            New
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ExecutionType.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ExecutionType.Replaced">
            <summary>
            Replaced
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ExecutionType.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ExecutionType.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ExecutionType.Expired">
            <summary>
            Expired
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ExecutionType.Amendment">
            <summary>
            Amendment
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.FiatPaymentStatus">
            <summary>
            Status of a fiat payment
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatPaymentStatus.Processing">
            <summary>
            Still processing
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatPaymentStatus.Completed">
            <summary>
            Successfully completed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatPaymentStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatPaymentStatus.Refunded">
            <summary>
            Refunded
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.FiatWithdrawDepositStatus">
            <summary>
            Status of a fiat payment
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatWithdrawDepositStatus.Processing">
            <summary>
            Still processing
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatWithdrawDepositStatus.Successful">
            <summary>
            Successfully completed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatWithdrawDepositStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatWithdrawDepositStatus.Finished">
            <summary>
            Finished
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatWithdrawDepositStatus.Refunding">
            <summary>
            Refunding
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatWithdrawDepositStatus.Refunded">
            <summary>
            Refunded
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatWithdrawDepositStatus.RefundFailed">
            <summary>
            Refund failed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FiatWithdrawDepositStatus.Expired">
            <summary>
            Expired
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.FuturesAccountType">
            <summary>
            Futures account type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesAccountType.UsdtMarginedFutures">
            <summary>
            USDT Margined Futures
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesAccountType.CoinMarginedFutures">
            <summary>
            COIN Margined Futures
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.FuturesMarginChangeDirectionType">
            <summary>
            The direction to change futures margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesMarginChangeDirectionType.Add">
            <summary>
            Add margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesMarginChangeDirectionType.Reduce">
            <summary>
            Reduce Margin
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.FuturesMarginType">
            <summary>
            Type of Margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesMarginType.Isolated">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesMarginType.Cross">
            <summary>
            Crossed margin
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.FuturesTransferStatus">
            <summary>
            Status of a transfer between spot and futures account
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesTransferStatus.Pending">
            <summary>
            Pending to execute
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesTransferStatus.Confirmed">
            <summary>
            Successfully transferred
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesTransferStatus.Failed">
            <summary>
            Execution failed
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.FuturesTransferType">
            <summary>
            Futures account transfer type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesTransferType.FromSpotToUsdtFutures">
            <summary>
            From spot to USDT-M futures account
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesTransferType.FromUsdtFuturesToSpot">
            <summary>
            From USDT-M futures to spot account
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesTransferType.FromSpotToCoinFutures">
            <summary>
            From spot to COIN-M futures account
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesTransferType.FromCoinFuturesToSpot">
            <summary>
            From COIN-M futures to spot account
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.HashrateResaleStatus">
            <summary>
            Resale status
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.HashrateResaleStatus.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.HashrateResaleStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.HashrateResaleStatus.Terminated">
            <summary>
            Terminated
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.IncomeType">
            <summary>
            Type of futures income
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.IncomeType.Transfer">
            <summary>
            Transfer into account
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.IncomeType.WelcomeBonus">
            <summary>
            Futures welcome bonus
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.IncomeType.RealizedPnl">
            <summary>
            Futures realized profit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.IncomeType.FundingFee">
            <summary>
            Futures funding fee
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.IncomeType.Commission">
            <summary>
            Futures trading commission
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.IncomeType.InsuranceClear">
            <summary>
            Insurance clear
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.IndicatorType">
            <summary>
            Types of indicators
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.IndicatorType.UnfilledRatio">
            <summary>
            Unfilled ratio
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.IndicatorType.ExpirationRatio">
            <summary>
            Expired orders ratio
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.IndicatorType.CancelationRatio">
            <summary>
            Canceled orders ratio
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.IsolatedMarginTransferDirection">
            <summary>
            Transfer direction for isolated margin transfer
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.IsolatedMarginTransferDirection.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.IsolatedMarginTransferDirection.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.KlineInterval">
            <summary>
            The interval for the kline, the int value represents the time in seconds
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.OneSecond">
            <summary>
            1s
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.OneMinute">
            <summary>
            1m
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.ThreeMinutes">
            <summary>
            3m
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.FiveMinutes">
            <summary>
            5m
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.FifteenMinutes">
            <summary>
            15m
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.ThirtyMinutes">
            <summary>
            30m
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.OneHour">
            <summary>
            1h
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.TwoHour">
            <summary>
            2h
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.FourHour">
            <summary>
            4h
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.SixHour">
            <summary>
            6h
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.EightHour">
            <summary>
            8h
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.TwelveHour">
            <summary>
            12h
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.OneDay">
            <summary>
            1d
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.ThreeDay">
            <summary>
            3d
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.OneWeek">
            <summary>
            1w
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.KlineInterval.OneMonth">
            <summary>
            1M
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.LendingType">
            <summary>
            Lending type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LendingType.Daily">
            <summary>
            Flexible
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LendingType.Activity">
            <summary>
            Activity
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LendingType.CustomizedFixed">
            <summary>
            Customized fixed
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.LiquidityType">
            <summary>
            Add/Remove liquidity type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LiquidityType.Single">
            <summary>
            Add/Remove single asset
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LiquidityType.Combined">
            <summary>
            Add/Remove combination of all coins
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.ListOrderStatus">
            <summary>
            List order status
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ListOrderStatus.Executing">
            <summary>
            Executing
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ListOrderStatus.Done">
            <summary>
            Executed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ListOrderStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.ListStatusType">
            <summary>
            List status type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ListStatusType.Response">
            <summary>
            Failed action
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ListStatusType.ExecutionStarted">
            <summary>
            Placed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ListStatusType.Done">
            <summary>
            Order list is done
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.LoanIncomeType">
            <summary>
            Income type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LoanIncomeType.BorrowIn">
            <summary>
            Borrow in
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LoanIncomeType.CollateralSpent">
            <summary>
            Collateral spent
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LoanIncomeType.RepayAmount">
            <summary>
            Repay amount
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LoanIncomeType.CollateralReturn">
            <summary>
            Collateral return
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LoanIncomeType.AddCollateral">
            <summary>
            Add collateral
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LoanIncomeType.RemoveCollateral">
            <summary>
            Remove collateral
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.LoanIncomeType.CollateralReturnAfterLiquidation">
            <summary>
            Collateral return after liquidation
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.MarginLevelStatus">
            <summary>
            Margin level status
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MarginLevelStatus.Excessive">
            <summary>
            Excessive
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MarginLevelStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MarginLevelStatus.MarginCall">
            <summary>
            Margin call
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MarginLevelStatus.PreLiquidation">
            <summary>
            Pre-liquidation
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MarginLevelStatus.ForceLiquidation">
            <summary>
            Force liquidation
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.MarginStatus">
            <summary>
            Status of a margin action
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MarginStatus.Pending">
            <summary>
            Pending to execution
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MarginStatus.Completed">
            <summary>
            Executed, waiting to be confirmed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MarginStatus.Confirmed">
            <summary>
            Successfully loaned/repayed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MarginStatus.Failed">
            <summary>
            execution failed, nothing happened to your account
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.MinerStatus">
            <summary>
            Miner status
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MinerStatus.All">
            <summary>
            All miners
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MinerStatus.Valid">
            <summary>
            Valid
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MinerStatus.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.MinerStatus.Failure">
            <summary>
            Failure
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.OrderOperationResult">
            <summary>
            Operation result
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderOperationResult.Success">
            <summary>
            Successful
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderOperationResult.Failure">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderOperationResult.NotAttempted">
            <summary>
            Not attempted
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.OrderRejectReason">
            <summary>
            The reason the order was rejected
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderRejectReason.None">
            <summary>
            Not rejected
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderRejectReason.UnknownInstrument">
            <summary>
            Unknown instrument
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderRejectReason.MarketClosed">
            <summary>
            Closed market
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderRejectReason.PriceQuantityExceedsHardLimits">
            <summary>
            Quantity out of bounds
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderRejectReason.UnknownOrder">
            <summary>
            Unknown order
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderRejectReason.DuplicateOrder">
            <summary>
            Duplicate
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderRejectReason.UnknownAccount">
            <summary>
            Unkown account
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderRejectReason.InsufficientBalance">
            <summary>
            Not enough balance
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderRejectReason.AccountInactive">
            <summary>
            Account not active
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderRejectReason.AccountCannotSettle">
            <summary>
            Cannot settle
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderRejectReason.StopPriceWouldTrigger">
            <summary>
            Stop price would trigger immediately
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.OrderResponseType">
            <summary>
            Response type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderResponseType.Acknowledge">
            <summary>
            Ack only
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderResponseType.Result">
            <summary>
            Resulting order
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderResponseType.Full">
            <summary>
            Full order info, only valid on SPOT orders  
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.OrderSide">
            <summary>
            The side of an order
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.OrderStatus">
            <summary>
            The status of an orderн
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderStatus.New">
            <summary>
            Order is new
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderStatus.PartiallyFilled">
            <summary>
            Order is partly filled, still has quantity left to fill
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderStatus.Filled">
            <summary>
            The order has been filled and completed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderStatus.Canceled">
            <summary>
            The order has been canceled
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderStatus.PendingCancel">
            <summary>
            The order is in the process of being canceled  (currently unused)
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderStatus.Rejected">
            <summary>
            The order has been rejected
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderStatus.Expired">
            <summary>
            The order has expired
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderStatus.Insurance">
            <summary>
            Liquidation with Insurance Fund
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderStatus.Adl">
            <summary>
            Counterparty Liquidation
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.OrderUrgency">
            <summary>
            Order urgency
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderUrgency.Low">
            <summary>
            Low urgency
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderUrgency.Medium">
            <summary>
            Medium urgency
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.OrderUrgency.High">
            <summary>
            High urgency
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.PayOrderType">
            <summary>
            Pay order type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PayOrderType.Pay">
            <summary>
            C2B Merchant Acquiring Payment
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PayOrderType.PayRefund">
            <summary>
            C2B Merchant Acquiring Payment, refund
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PayOrderType.C2C">
            <summary>
            C2C Transfer Payment
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PayOrderType.CryptoBox">
            <summary>
            Crypto box
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PayOrderType.CryptoBoxRefund">
            <summary>
            Crypto box, refund
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PayOrderType.C2CHolding">
            <summary>
            Transfer to new Binance user
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PayOrderType.C2CHoldingRefund">
            <summary>
            Transfer to new Binance user, refund
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PayOrderType.Payout">
            <summary>
            B2C Disbursement Payment
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.PeriodInterval">
            <summary>
            The interval for the period
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PeriodInterval.FiveMinutes">
            <summary>
            5m
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PeriodInterval.FifteenMinutes">
            <summary>
            15m
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PeriodInterval.ThirtyMinutes">
            <summary>
            30m
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PeriodInterval.OneHour">
            <summary>
            1h
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PeriodInterval.TwoHour">
            <summary>
            2h
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PeriodInterval.FourHour">
            <summary>
            4h
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PeriodInterval.SixHour">
            <summary>
            6h
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PeriodInterval.TwelveHour">
            <summary>
            12h
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PeriodInterval.OneDay">
            <summary>
            1d
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.PortfolioMarginAccountStatus">
            <summary>
            Account status
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PortfolioMarginAccountStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PortfolioMarginAccountStatus.MarginCall">
            <summary>
            Margin call
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PortfolioMarginAccountStatus.SupplyMargin">
            <summary>
            Supply margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PortfolioMarginAccountStatus.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PortfolioMarginAccountStatus.ActiveLiquidation">
            <summary>
            Active liquidation
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PortfolioMarginAccountStatus.ForceLiquidation">
            <summary>
            Force liquidation
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PortfolioMarginAccountStatus.Bankrupted">
            <summary>
            Bankruped
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.PositionMode">
            <summary>
            User position mode
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PositionMode.Hedge">
            <summary>
            In the Hedge Mode, one contract can hold positions in both long and short directions at the same time, and hedge positions in different directions under the same contract.
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PositionMode.OneWay">
            <summary>
            In the One-way Mode, one contract can only hold positions in one direction.
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.PositionSide">
            <summary>
            Position side
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PositionSide.Short">
            <summary>
            Short
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PositionSide.Long">
            <summary>
            Long
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.PositionSide.Both">
            <summary>
            Both for One-way mode when placing an order
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.ProductStatus">
            <summary>
            Status of a product
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ProductStatus.All">
            <summary>
            All products
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ProductStatus.Subscribable">
            <summary>
            Products which are subscribable
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ProductStatus.Unsubscribable">
            <summary>
            Products which are unsubscribable
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.ProjectStatus">
            <summary>
            Project status
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ProjectStatus.Holding">
            <summary>
            Holding
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ProjectStatus.Redeemed">
            <summary>
            Redeemed
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.ProjectType">
            <summary>
            The type of project
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ProjectType.Activity">
            <summary>
            Regular
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.ProjectType.CustomizedFixed">
            <summary>
            Customized fixed
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.RateLimitInterval">
            <summary>
            Rate limit on what unit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.RateLimitInterval.Second">
            <summary>
            Seconds
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.RateLimitInterval.Minute">
            <summary>
            Minutes
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.RateLimitInterval.Day">
            <summary>
            Days
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.RateLimitType">
            <summary>
            Type of rate limit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.RateLimitType.RequestWeight">
            <summary>
            Request weight
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.RateLimitType.Orders">
            <summary>
            Order amount
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.RateLimitType.RawRequests">
            <summary>
            Raw requests
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.RebateType">
            <summary>
            Type of rebate
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.RebateType.CommissionRebate">
            <summary>
            Commission rebate
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.RebateType.ReferralKickback">
            <summary>
            Referral kickback
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.RedeemType">
            <summary>
            Redeem type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.RedeemType.Fast">
            <summary>
            Fast
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.RedeemType.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.SideEffectType">
            <summary>
            Side effect for a margin order
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SideEffectType.NoSideEffect">
            <summary>
            Normal trade
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SideEffectType.MarginBuy">
            <summary>
            Margin trade order
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SideEffectType.AutoRepay">
            <summary>
            Make auto repayment after order is filled
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.SpotOrderType">
            <summary>
            Order type for a spot order
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SpotOrderType.Limit">
            <summary>
            Limit orders will be placed at a specific price. If the price isn't available in the order book for that asset the order will be added in the order book for someone to fill.
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SpotOrderType.Market">
            <summary>
            Market order will be placed without a price. The order will be executed at the best price available at that time in the order book.
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SpotOrderType.StopLoss">
            <summary>
            Stop loss order. Will execute a market order when the price drops below a price to sell and therefor limit the loss
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SpotOrderType.StopLossLimit">
            <summary>
            Stop loss order. Will execute a limit order when the price drops below a price to sell and therefor limit the loss
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SpotOrderType.TakeProfit">
            <summary>
            Take profit order. Will execute a market order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SpotOrderType.TakeProfitLimit">
            <summary>
            Take profit limit order. Will execute a limit order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SpotOrderType.LimitMaker">
            <summary>
            Same as a limit order, however it will fail if the order would immediately match, therefor preventing taker orders
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.FuturesOrderType">
            <summary>
            Order type for a futures order
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesOrderType.Limit">
            <summary>
            Limit orders will be placed at a specific price. If the price isn't available in the order book for that asset the order will be added in the order book for someone to fill.
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesOrderType.Market">
            <summary>
            Market order will be placed without a price. The order will be executed at the best price available at that time in the order book.
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesOrderType.Stop">
            <summary>
            Stop order. Execute a limit order when price reaches a specific Stop price
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesOrderType.StopMarket">
            <summary>
            Stop market order. Execute a market order when price reaches a specific Stop price
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesOrderType.TakeProfit">
            <summary>
            Take profit order. Will execute a limit order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesOrderType.TakeProfitMarket">
            <summary>
            Take profit market order. Will execute a market order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesOrderType.TrailingStopMarket">
            <summary>
            A trailing stop order will execute an order when the price drops below a certain percentage from its all time high since the order was activated
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.FuturesOrderType.Liquidation">
            <summary>
            A liquidation order
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.StakingProductType">
            <summary>
            Staking type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.StakingProductType.Staking">
            <summary>
            Locked staking
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.StakingProductType.FlexibleDeFi">
            <summary>
            Flexible DeFi staking
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.StakingProductType.LockedDeFi">
            <summary>
            Locked DeFi staking
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.StakingTransactionType">
            <summary>
            Staking transaction type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.StakingTransactionType.Subscription">
            <summary>
            Subscription
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.StakingTransactionType.Redemption">
            <summary>
            Redemption
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.StakingTransactionType.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.SubAccountMarginTransferType">
            <summary>
            Sub account margin transfer type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SubAccountMarginTransferType.FromSubAccountSpotToSubAccountMargin">
            <summary>
            Sub account spot to sub account margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SubAccountMarginTransferType.FromSubAccountMarginToSubAccountSpot">
            <summary>
            From sub account margin to sub account spot
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.SubAccountTransferSubAccountType">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SubAccountTransferSubAccountType.TransferIn">
            <summary>
            From main spot account to sub account
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SubAccountTransferSubAccountType.TransferOut">
            <summary>
            From sub account to main spot account
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.SubAccountFuturesTransferType">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SubAccountFuturesTransferType.FromSpotToUsdtFutures">
            <summary>
            From sub account spot to sub account usdt-m futures
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SubAccountFuturesTransferType.FromUsdtFuturesToSpot">
            <summary>
            From sub account usdt-m futures to sub account spot
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SubAccountFuturesTransferType.FromSpotToCoinFutures">
            <summary>
            From sub account spot to sub account coin-m futures
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SubAccountFuturesTransferType.FromCoinFuturesToSpot">
            <summary>
            From sub account coin-m futures to sub account spot
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.SymbolFilterType">
            <summary>
            Filter type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.Unknown">
            <summary>
            Unknown filter type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.Price">
            <summary>
            Price filter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.PricePercent">
            <summary>
            Price percent filter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.LotSize">
            <summary>
            Lot size filter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.MarketLotSize">
            <summary>
            Market lot size filter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.MinNotional">
            <summary>
            Min notional filter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.MaxNumberOrders">
            <summary>
            Max orders filter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.MaxNumberAlgorithmicOrders">
            <summary>
            Max algo orders filter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.IcebergParts">
            <summary>
            Max iceberg parts filter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.MaxPosition">
            <summary>
            Max position filter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.PercentagePriceBySide">
            <summary>
            Price filter by side
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.TrailingDelta">
            <summary>
            Trailing delta filter
            </summary>,
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.Notional">
            <summary>
            Notional filter
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolFilterType.IcebergOrders">
            <summary>
            Max Iceberg Orders filter
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.SymbolStatus">
            <summary>
            Status of a symbol
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.PreTrading">
            <summary>
            Not trading yet
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.PendingTrading">
            <summary>
            Pending trading
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.Trading">
            <summary>
            Trading
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.PostTrading">
            <summary>
            No longer trading
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.EndOfDay">
            <summary>
            Not trading
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.Halt">
            <summary>
            Halted
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.AuctionMatch">
            <summary>
            
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.Break">
            <summary>
            
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.Close">
            <summary>
            Closed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.PreDelivering">
            <summary>
            Pre delivering
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.Delivering">
            <summary>
            Delivering
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.PreSettle">
            <summary>
            Pre settle
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SymbolStatus.Settling">
            <summary>
            Settings
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.SystemStatus">
            <summary>
            Status of the Binance system
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SystemStatus.Normal">
            <summary>
            Operational
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.SystemStatus.Maintenance">
            <summary>
            In maintenance
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.TimeInForce">
            <summary>
            The time the order will be active for
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TimeInForce.GoodTillCanceled">
            <summary>
            GoodTillCanceled orders will stay active until they are filled or canceled
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TimeInForce.ImmediateOrCancel">
            <summary>
            ImmediateOrCancel orders have to be at least partially filled upon placing or will be automatically canceled
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TimeInForce.FillOrKill">
            <summary>
            FillOrKill orders have to be entirely filled upon placing or will be automatically canceled
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TimeInForce.GoodTillCrossing">
            <summary>
            GoodTillCrossing orders will post only
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TimeInForce.GoodTillExpiredOrCanceled">
            <summary>
            Good til the order expires or is canceled
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.TradeRulesBehaviour">
            <summary>
            Trade rules behaviour
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TradeRulesBehaviour.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TradeRulesBehaviour.ThrowError">
            <summary>
            Throw an error if not complying
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TradeRulesBehaviour.AutoComply">
            <summary>
            Auto adjust order when not complying
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.TransactionType">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TransactionType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TransactionType.Withdrawal">
            <summary>
            Withdrawal
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.TransferAccountType">
            <summary>
            Transfer account type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TransferAccountType.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TransferAccountType.UsdtFuture">
            <summary>
            USDT-M future
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TransferAccountType.CoinFuture">
            <summary>
            Coin-M future
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TransferAccountType.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TransferAccountType.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.TransferDirection">
            <summary>
            Direction of a transfer
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TransferDirection.RollIn">
            <summary>
            Roll-in
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TransferDirection.RollOut">
            <summary>
            Roll-out
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.TransferDirectionType">
            <summary>
            Transfer direction
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TransferDirectionType.MainToMargin">
            <summary>
            From main account to margin account
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.TransferDirectionType.MarginToMain">
            <summary>
            From margin account to main account
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.UnderlyingType">
            <summary>
            Underlying Type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UnderlyingType.Coin">
            <summary>
            Coin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UnderlyingType.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.UniversalTransferType">
            <summary>
            Universal transfer type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MainToFunding">
            <summary>
            Main (spot) to Funding
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MainToUsdFutures">
            <summary>
            Main (spot) to Usd Futures
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MainToCoinFutures">
            <summary>
            Main (spot) to Coin Futures
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MainToMargin">
            <summary>
            Main (spot) to Margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MainToMining">
            <summary>
            Main (spot) to Mining
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.FundingToMain">
            <summary>
            Funding to Main (spot)
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.FundingToUsdFutures">
            <summary>
            Funding to Usd futures
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.FundingToMargin">
            <summary>
            Funding to margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.UsdFuturesToMain">
            <summary>
            Usd futures to Main (spot)
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.UsdFuturesToFunding">
            <summary>
            Usd futures to Funding
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.UsdFuturesToMargin">
            <summary>
            Usd futures to Margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.CoinFuturesToMain">
            <summary>
            Coin futures to Main (spot)
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.CoinFuturesToMargin">
            <summary>
            Coin futures to Margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MarginToMain">
            <summary>
            Margin to Main (spot)
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MarginToUsdFutures">
            <summary>
            Margin to Usd futures
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MarginToCoinFutures">
            <summary>
            Margin to Coin futures
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MarginToMining">
            <summary>
            Margin to Mining
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MarginToFunding">
            <summary>
            Margin to Funding
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.IsolatedMarginToMargin">
            <summary>
            Isolated margin to margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MarginToIsolatedMargin">
            <summary>
            Margin to isolated margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.IsolatedMarginToIsolatedMargin">
            <summary>
            Isolated margin to Isolated margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MiningToMain">
            <summary>
            Mining to Main (spot)
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MiningToUsdFutures">
            <summary>
            Mining to Usd futures
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.MiningToMargin">
            <summary>
            Mining to Margin
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.FundingToCoinFutures">
            <summary>
            Funding to Coin futures
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.UniversalTransferType.CoinFuturesToFunding">
            <summary>
            Coin futures to Funding
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.WalletType">
            <summary>
            Wallet type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WalletType.Spot">
            <summary>
            Spot wallet
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WalletType.Funding">
            <summary>
            Funding wallet
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.WithdrawalStatus">
            <summary>
            The status of a withdrawal
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WithdrawalStatus.EmailSend">
            <summary>
            Email has been send
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WithdrawalStatus.Canceled">
            <summary>
            Withdrawal has been canceled
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WithdrawalStatus.AwaitingApproval">
            <summary>
            Withdrawal is awaiting approval
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WithdrawalStatus.Rejected">
            <summary>
            Withdrawal has been rejected
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WithdrawalStatus.Processing">
            <summary>
            Withdrawal is processing
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WithdrawalStatus.Failure">
            <summary>
            Withdrawal has failed
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WithdrawalStatus.Completed">
            <summary>
            Withdrawal has been processed
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.WithdrawalTransferType">
            <summary>
            Withdrawal transfer type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WithdrawalTransferType.ExternalTransfer">
            <summary>
            Withdrawal to external wallets
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WithdrawalTransferType.InternalTransfer">
            <summary>
            Withdrawal from one binance account to another one
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.WithdrawDepositTransferType">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WithdrawDepositTransferType.Internal">
            <summary>
            Internal transfer
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WithdrawDepositTransferType.External">
            <summary>
            External transfer
            </summary>
        </member>
        <member name="T:Binance.Net.Enums.WorkingType">
            <summary>
            Type of working
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WorkingType.Mark">
            <summary>
            Mark price type
            </summary>
        </member>
        <member name="F:Binance.Net.Enums.WorkingType.Contract">
            <summary>
            Contract price type
            </summary>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApi">
            <summary>
            Binance Coin futures API endpoints
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market data
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApi.CommonFuturesClient">
            <summary>
            Get the IFuturesClient for this client. This is a common interface which allows for some basic operations without knowing any details of the exchange.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount">
            <summary>
            Binance COIN-M futures account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.GetPositionInformationAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account position information
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#position-information-user_data" /></para>
            </summary>
            <param name="marginAsset">Filter by margin asset</param>
            <param name="pair">Filter by pair</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of Positions</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account information, including balances
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#account-information-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The account information</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.GetBalancesAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>.
            Gets account balances
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#futures-account-balance-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The account information</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.ModifyPositionModeAsync(System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Change user's position mode (Hedge Mode or One-way Mode ) on EVERY symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#change-position-mode-trade" /></para>
            </summary>
            <param name="dualPositionSide">User position mode</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Whether the request was successful</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.GetPositionModeAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user's position mode (Hedge Mode or One-way Mode ) on EVERY symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#get-current-position-mode-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Whether the request was successful</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.ChangeInitialLeverageAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Requests to change the initial leverage of the given symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#change-initial-leverage-trade" /></para>
            </summary>
            <param name="symbol">Symbol to change the initial leverage for</param>
            <param name="leverage">The amount of initial leverage to change to</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Result of the initial leverage change request</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.ChangeMarginTypeAsync(System.String,Binance.Net.Enums.FuturesMarginType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Change the margin type for an open position
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#change-margin-type-trade" /></para>
            </summary>
            <param name="symbol">Symbol to change the position type for</param>
            <param name="marginType">The type of margin to use</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Whether the request was successful</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.ModifyPositionMarginAsync(System.String,System.Decimal,Binance.Net.Enums.FuturesMarginChangeDirectionType,System.Nullable{Binance.Net.Enums.PositionSide},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Change the margin on an open position
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#modify-isolated-position-margin-trade" /></para>
            </summary>
            <param name="symbol">Symbol to adjust the position margin for</param>
            <param name="amount">The amount of margin to be used</param>
            <param name="type">Whether to reduce or add margin to the position</param>
            <param name="positionSide">Default BOTH for One-way Mode ; LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The new position margin</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.GetMarginChangeHistoryAsync(System.String,System.Nullable{Binance.Net.Enums.FuturesMarginChangeDirectionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Requests the margin change history for a specific symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#get-position-margin-change-history-trade" /></para>
            </summary>
            <param name="symbol">Symbol to get margin history for</param>
            <param name="type">Filter the history by the direction of margin change</param>
            <param name="startTime">Margin changes newer than this date will be retrieved</param>
            <param name="endTime">Margin changes older than this date will be retrieved</param>
            <param name="limit">The max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of all margin changes for the symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.GetIncomeHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets the income history for the futures account
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#get-income-history-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get income history from</param>
            <param name="incomeType">The income type filter to apply to the request</param>
            <param name="startTime">Time to start getting income history from</param>
            <param name="endTime">Time to stop getting income history from</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The income history for the futures account</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.GetBracketsAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets Notional and Leverage Brackets.
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#notional-bracket-for-pair-user_data" /></para>
            </summary>
            <param name="symbolOrPair">The symbol or pair to get the data for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Notional and Leverage Brackets</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.GetPositionAdlQuantileEstimationAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get position ADL quantile estimations
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#position-adl-quantile-estimation-user_data" /></para>
            </summary>
            <param name="symbol">Only get for this symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.GetUserCommissionRateAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account commission rates
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#user-commission-rate-user_data" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>User commission rate information</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Start a user stream. The resulting listen key can be used to subscribe to the user stream using the socket client
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#start-user-data-stream-user_stream" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Keep alive the user stream. This should be called every 30 minutes to prevent the user stream being stopped
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#keepalive-user-data-stream-user_stream" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stop the user stream, no updates will be send anymore
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#close-user-data-stream-user_stream" /></para>
            </summary>
            <param name="listenKey">The listen key to stop</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData">
            <summary>
            Binance COIN-M futures exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <summary>
            Pings the Binance Futures API
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#test-connectivity" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>True if successful ping, false if no response</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetServerTimeAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Requests the server for the local time. This function also determines the offset between server and local time and uses this for subsequent API calls
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#check-server-time" /></para>
            </summary>
            <param name="resetAutoTimestamp">Whether the response should be used for a new auto timestamp calculation</param>
            <param name="ct">Cancellation token</param>
            <returns>Server time</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and symbol list
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#exchange-information" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the recent trades for a symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#recent-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol to get recent trades for</param>
            <param name="limit">Result limit</param>
            <param name="ct">Cancellation token</param>
            <returns>List of recent trades</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets the historical  trades for a symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#old-trades-lookup-market_data" /></para>
            </summary>
            <param name="symbol">The symbol to get recent trades for</param>
            <param name="limit">Result limit</param>
            <param name="fromId">From which trade id on results should be retrieved</param>
            <param name="ct">Cancellation token</param>
            <returns>List of recent trades</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets compressed, aggregate trades. Trades that fill at the time, from the same order, with the same price will have the quantity aggregated.
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#compressed-aggregate-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol to get the trades for</param>
            <param name="fromId">ID to get aggregate trades from INCLUSIVE.</param>
            <param name="startTime">Time to start getting trades from</param>
            <param name="endTime">Time to stop getting trades from</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The aggregated trades list for the symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#kline-candlestick-data" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetFundingRatesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get funding rate history for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#index-price-and-mark-price" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="startTime">Start time to get funding rate history</param>
            <param name="endTime">End time to get funding rate history</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The funding rate history for the provided symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetTopLongShortAccountRatioAsync(System.String,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Top Trader Long/Short Ratio (Accounts)
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#top-trader-long-short-ratio-accounts" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get top trader long/short ratio (accounts)</param>
            <param name="endTime">End time to get top trader long/short ratio (accounts)</param>
            <param name="ct">Cancellation token</param>
            <returns>Top Trader Long/Short Ratio (Accounts) info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetTopLongShortPositionRatioAsync(System.String,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Top Trader Long/Short Ratio (Positions)
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#top-trader-long-short-ratio-positions" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get top trader long/short ratio (positions)</param>
            <param name="endTime">End time to get top trader long/short ratio (positions)</param>
            <param name="ct">Cancellation token</param>
            <returns>Top Trader Long/Short Ratio (Positions) info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetGlobalLongShortAccountRatioAsync(System.String,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Global Long/Short Ratio (Accounts)
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#long-short-ratio" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get global long/short ratio (accounts)</param>
            <param name="endTime">End time to get global long/short ratio (accounts)</param>
            <param name="ct">Cancellation token</param>
            <returns>Global Long/Short Ratio (Accounts) info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetMarkPriceKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Kline/candlestick bars for the mark price of a symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#mark-price-kline-candlestick-data" /></para>
            </summary>
            <param name="symbol">The symbol get the data for</param>
            <param name="interval">The interval of the klines</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#order-book" /></para>
            </summary>
            <param name="symbol">The symbol to get the order book for</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The order book for the symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetMarkPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Mark Price and Funding Rate for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#index-price-and-mark-price" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="pair">Filter by pair</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetContinuousContractKlinesAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided pair
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#continuous-contract-kline-candlestick-data" /></para>
            </summary>
            <param name="pair">The symbol to get the data for</param>
            <param name="contractType">The contract type</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetIndexPriceKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided pair
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#index-price-kline-candlestick-data" /></para>
            </summary>
            <param name="pair">The symbol to get the data for</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetTickersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours change
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="pair">Filter by pair</param>
            <param name="ct">Cancellation token</param>
            <returns>Data over the last 24 hours</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetBookPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for a symbol.
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#symbol-order-book-ticker" /></para>
            </summary>
            <param name="symbol">Symbol to get book price for</param>
            <param name="pair">Filter by pair</param>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetOpenInterestAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get present open interest of a specific symbol.
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#open-interest" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="ct">Cancellation token</param>
            <returns>Open Interest info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetOpenInterestHistoryAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Open Interest History
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#open-interest-statistics" /></para>
            </summary>
            <param name="pair">The pair to get the data for</param>
            <param name="contractType">The contract type</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get open interest history</param>
            <param name="endTime">End time to get open interest history</param>
            <param name="ct">Cancellation token</param>
            <returns>Open Interest History info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetTakerBuySellVolumeRatioAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets Taker Buy/Sell Volume Ratio
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#taker-buy-sell-volume" /></para>
            </summary>
            <param name="pair">The pair to get the data for</param>
            <param name="contractType">The contract type</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time to get taker buy/sell volume ratio</param>
            <param name="endTime">End time to get taker buy/sell volume ratio</param>
            <param name="ct">Cancellation token</param>
            <returns>Taker Buy/Sell Volume Ratio info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetBasisAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.PeriodInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets basis
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#basis" /></para>
            </summary>
            <param name="pair">The pair to get the data for</param>
            <param name="contractType">The contract type</param>
            <param name="period">The period timespan</param>
            <param name="limit">Max number of results</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="ct">Cancellation token</param>
            <returns>Basis</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiExchangeData.GetPricesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of the prices of all symbols
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#symbol-price-ticker" /></para>
            </summary>
            <param name="symbol">Retrieve for a symbol</param>
            <param name="pair">Retrieve prices for a specific pair</param>
            <param name="ct">Cancellation token</param>
            <returns>List of prices</returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading">
            <summary>
            Binance COIN-M futures trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.PlaceOrderAsync(System.String,Binance.Net.Enums.OrderSide,Binance.Net.Enums.FuturesOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.PositionSide},System.Nullable{Binance.Net.Enums.TimeInForce},System.Nullable{System.Boolean},System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.WorkingType},System.Nullable{System.Boolean},System.Nullable{Binance.Net.Enums.OrderResponseType},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Places a new order
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#new-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The quantity of the base symbol</param>
            <param name="positionSide">The position side</param>
            <param name="reduceOnly">Specify as true if the order is intended to only reduce the position</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="activationPrice">Used with TRAILING_STOP_MARKET orders, default as the latest price（supporting different workingType)</param>
            <param name="callbackRate">Used with TRAILING_STOP_MARKET orders</param>
            <param name="workingType">stopPrice triggered by: "MARK_PRICE", "CONTRACT_PRICE"</param>
            <param name="closePosition">Close-All，used with STOP_MARKET or TAKE_PROFIT_MARKET.</param>
            <param name="orderResponseType">The response type. Default Acknowledge</param>
            <param name="priceProtect">If true when price reaches stopPrice, difference between "MARK_PRICE" and "CONTRACT_PRICE" cannot be larger than "triggerProtect" of the symbol.</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for the placed order</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.PlaceMultipleOrdersAsync(Binance.Net.Objects.Models.Futures.BinanceFuturesBatchOrder[],System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Place multiple orders in one call
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#place-multiple-orders-trade" /></para>
            </summary>
            <param name="orders">The orders to place</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Returns a list of call results, one for each order. The order the results are in is the order the orders were sent</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific order. Either orderId or origClientOrderId should be provided.
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#query-order-user_data" /></para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels a pending order
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#cancel-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.CancelAllOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels all open orders
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#cancel-all-open-orders-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.CancelAllOrdersAfterTimeoutAsync(System.String,System.TimeSpan,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel all open orders of the specified symbol at the end of the specified countdown. This rest endpoint means to ensure your open orders are canceled in case of an outage. The endpoint should be called repeatedly as heartbeats
            so that the existing countdown time can be canceled and replaced by a new one.
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#auto-cancel-all-open-orders-trade" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="countDownTime">The time after which all open orders should cancel, or 0 to cancel an existing timer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Countdown result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.CancelMultipleOrdersAsync(System.String,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.String},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels muliple orders
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#cancel-multiple-orders-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="orderIdList">The list of order ids to cancel</param>
            <param name="origClientOrderIdList">The list of client order ids to cancel</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.GetOpenOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific open order. Either orderId or origClientOrderId should be provided.
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#query-current-open-order-user_data" /></para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of open orders
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#current-all-open-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get open orders for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of open orders</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all orders for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#all-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get orders for</param>
            <param name="orderId">If set, only orders with an order id higher than the provided will be returned</param>
            <param name="startTime">If set, only orders placed after this time will be returned</param>
            <param name="endTime">If set, only orders placed before this time will be returned</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of orders</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.GetForcedOrdersAsync(System.String,System.Nullable{Binance.Net.Enums.AutoCloseType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of users forced orders
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#user-39-s-force-orders-user_data" /></para>
            </summary>
            <param name="symbol">The symbol to get forced orders for</param>
            <param name="closeType">Filter by reason for close</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of forced orders</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceClientCoinFuturesApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets all user trades for provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#account-trade-list-user_data" /></para>
            </summary>
            <param name="symbol">Symbol to get trades for</param>
            <param name="pair">Symbol to get trades for</param>
            <param name="limit">The max number of results</param>
            <param name="fromId">TradeId to fetch from. Default gets most recent trades</param>
            <param name="startTime">Orders newer than this date will be retrieved</param>
            <param name="endTime">Orders older than this date will be retrieved</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of trades</returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams">
            <summary>
            Binance Coin futures streams
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the aggregated trades update stream for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#aggregate-trade-streams" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamAggregatedTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the aggregated trades update stream for the provided symbols
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#aggregate-trade-streams" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToKlineUpdatesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{Binance.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbol and intervals
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="intervals">The intervals of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbols
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Binance.Net.Enums.KlineInterval},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the candlestick update stream for the provided symbols and intervals
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#kline-candlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="intervals">The intervals of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToMiniTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceMiniTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for a specific symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#individual-symbol-mini-ticker-stream" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceMiniTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for a list of symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#individual-symbol-mini-ticker-stream" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe to</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToAllMiniTickerUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Interfaces.IBinanceMiniTick}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to mini ticker updates stream for all symbols
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#all-market-mini-tickers-stream" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinance24HPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for a specific symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#individual-symbol-ticker-streams" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinance24HPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for a specific symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#individual-symbol-ticker-streams" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe to</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToAllTickerUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Interfaces.IBinance24HPrice}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to ticker updates stream for all symbols
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#all-market-tickers-streams" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToAllBookTickerUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamBookPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to all book ticker update streams
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#all-book-tickers-stream" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the book ticker update stream for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#individual-symbol-book-ticker-streams" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamBookPrice}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the book ticker update stream for the provided symbols
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#individual-symbol-book-ticker-streams" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToLiquidationUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to specific symbol forced liquidations stream
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#liquidation-order-streams" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToLiquidationUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to list of symbol forced liquidations stream
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#liquidation-order-streams" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToAllLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamLiquidation}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to all forced liquidations stream
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#all-market-liquidation-order-streams" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth updates for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#partial-book-depth-streams" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe on</param>
            <param name="levels">The amount of entries to be returned in the update</param>
            <param name="updateInterval">Update interval in milliseconds</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth updates for the provided symbols
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#partial-book-depth-streams" /></para>
            </summary>
            <param name="symbols">The symbols to subscribe on</param>
            <param name="levels">The amount of entries to be returned in the update of each symbol</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 500. Defaults to 250</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the order book updates for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#diff-book-depth-streams" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="updateInterval">Update interval in milliseconds, either 0 or 100, 500 or 1000, depending on endpoint</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Interfaces.IBinanceFuturesEventOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the depth update stream for the provided symbols
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#diff-book-depth-streams" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="updateInterval">Update interval in milliseconds, either 0 or 100, 500 or 1000, depending on endpoint</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToUserDataUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamConfigUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamMarginUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamAccountUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamOrderUpdate}},System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.BinanceStreamEvent}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the account update stream. Prior to using this, the BinanceClient.Futures.UserStreams.StartUserStream method should be called.
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#user-data-streams" /></para>
            </summary>
            <param name="listenKey">Listen key retrieved by the StartUserStream method</param>
            <param name="onLeverageUpdate">The event handler for leverage changed update</param>
            <param name="onMarginUpdate">The event handler for whenever a margin has changed</param>
            <param name="onAccountUpdate">The event handler for whenever an account update is received</param>
            <param name="onOrderUpdate">The event handler for whenever an order status update is received</param>
            <param name="onListenKeyExpired">Responds when the listen key for the stream has expired. Initiate a new instance of the stream here</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToIndexPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamIndexPrice}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the Index price update stream for a single pair
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#index-price-stream" /></para>
            </summary>
            <param name="pair">The symbol</param>
            <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToIndexPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesStreamIndexPrice}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the Index price update stream for a list of pairs
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#index-price-stream" /></para>
            </summary>
            <param name="pairs">The pairs</param>
            <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToMarkPriceUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesCoinStreamMarkPrice}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the Mark price update stream for a single symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#mark-price-stream" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToMarkPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{CryptoExchange.Net.Sockets.DataEvent{System.Collections.Generic.IEnumerable{Binance.Net.Objects.Models.Futures.Socket.BinanceFuturesCoinStreamMarkPrice}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the Mark price update stream for a list of symbols
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#mark-price-stream" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="updateInterval">Update interval in milliseconds, either 1000 or 3000. Defaults to 3000</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToContinuousContractKlineUpdatesAsync(System.String,Binance.Net.Enums.ContractType,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the continuous contract candlestick update stream for the provided pair
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#continuous-contract-kline-candlestick-streams" /></para>
            </summary>
            <param name="pair">The pair</param>
            <param name="contractType">The contract type</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToContinuousContractKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.ContractType,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Spot.Socket.BinanceStreamKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the continuous contract candlestick update stream for the provided pairs
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#continuous-contract-kline-candlestick-streams" /></para>
            </summary>
            <param name="pairs">The pairs</param>
            <param name="contractType">The contract type</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToIndexKlineUpdatesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceStreamIndexKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the index candlestick update stream for the provided pair
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#index-kline-candlestick-streams" /></para>
            </summary>
            <param name="pair">The pair</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToIndexKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceStreamIndexKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the index candlestick update stream for the provided pairs
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#index-kline-candlestick-streams" /></para>
            </summary>
            <param name="pairs">The pairs</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToMarkPriceKlineUpdatesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceStreamIndexKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the mark price candlestick update stream for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#mark-price-kline-candlestick-streams" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.CoinFuturesApi.IBinanceSocketClientCoinFuturesStreams.SubscribeToMarkPriceKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},Binance.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Sockets.DataEvent{Binance.Net.Objects.Models.Futures.Socket.BinanceStreamIndexKlineData}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to the mark price candlestick update stream for the provided symbols
            <para><a href="https://binance-docs.github.io/apidocs/delivery/en/#mark-price-kline-candlestick-streams" /></para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApi">
            <summary>
            Binance general API endpoints
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApi.Brokerage">
            <summary>
            Endpoints related to brokerage
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApi.Futures">
            <summary>
            Endpoints related to futures account interactions
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApi.Savings">
            <summary>
            Endpoints related to savings
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApi.CryptoLoans">
            <summary>
            Endpoints related to crypto loans
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApi.Mining">
            <summary>
            Endpoints related to mining
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApi.SubAccount">
            <summary>
            Endpoints related to requesting data for and controlling sub accounts
            </summary>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage">
            <summary>
            Binance brokerage endpoints.
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.CreateSubAccountAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Create a Sub Account
            <para>This request will generate a sub account under your brokerage master account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Created sub-account id</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.EnableMarginForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable Margin for Sub Account
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Enable Margin result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.EnableFuturesForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable Futures for Sub Account
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Enable Futures result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.EnableLeverageTokenForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable Leverage Token for Sub Account
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Enable Leverage Token result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.CreateApiKeyForSubAccountAsync(System.String,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Create Api Key for Sub Account
            <para>This request will generate a api key for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            <para>Sub account should be enable margin before its api-key's marginTrade being enabled</para>
            <para>Sub account should be enable futures before its api-key's futuresTrade being enabled</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="isSpotTradingEnabled">Is spot trading enabled</param>
            <param name="isMarginTradingEnabled">Is margin trading enabled</param>
            <param name="isFuturesTradingEnabled">Is futures trading enabled</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Api key result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.DeleteSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Delete Sub Account Api Key
            <para>This request will delete a api key for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey"></param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Api Key
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 500, max 500)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Api key result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.ChangeSubAccountApiKeyPermissionAsync(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Change Sub Account Api Permission
            <para>This request will change the api permission for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            <para>Sub account should be enable margin before its api-key's marginTrade being enabled</para>
            <para>Sub account should be enable futures before its api-key's futuresTrade being enabled</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="isSpotTradingEnabled">Is spot trading enabled</param>
            <param name="isMarginTradingEnabled">Is margin trading enabled</param>
            <param name="isFuturesTradingEnabled">Is futures trading enabled</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Api key result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.AddIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Add IP Restriction for Sub Account Api Key
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="ipAddress">IP address</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Restriction result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.ChangeIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable or Disable IP Restriction for Sub Account Api Key
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="ipRestrict">IP restrict</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Restriction result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get IP Restriction for Sub Account Api Key
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Restriction result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.DeleteIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Delete IP Restriction for Sub Account Api Key
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="apiKey">Api key</param>
            <param name="ipAddress">IP address</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Restriction result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetSubAccountsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 500)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub accounts</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.ChangeSubAccountCommissionAsync(System.String,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Change Sub Account Commission
            <para>This request will change the commission for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            <para>If margin disabled, it is not allowed to send marginMakerCommission or marginTakerCommission</para>
            <para>If margin enabled, marginMakerCommission or marginTakerCommission has default value as spotMakerCommission or spotTakerCommission</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="makerCommission">Maker commission</param>
            <param name="takerCommission">Taker commission</param>
            <param name="marginMakerCommission">Margin maker commission</param>
            <param name="marginTakerCommission">Margin taker commission</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub account commission result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.ChangeSubAccountFuturesCommissionAdjustmentAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Change Sub Account USDT-Ⓜ Futures Commission Adjustment
            <para>This request will change the USDT-Ⓜ futures commission for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            <para>The sub-account's USDT-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment</para>
            <para>If futures disabled, it is not allowed to set subaccount's USDT-Ⓜ futures commission adjustment on any symbol</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="symbol">Symbol</param>
            <param name="makerAdjustment">Maker adjustment (100 for 0.01%)</param>
            <param name="takerAdjustment">Taker adjustment (100 for 0.01%)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub account USDT-Ⓜ futures commission result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetSubAccountFuturesCommissionAdjustmentAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account USDT-Ⓜ Futures Commission Adjustment
            <para>The sub-account's USDT-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment</para>
            <para>If symbol not sent, commission adjustment of all symbols will be returned</para>
            <para>If futures disabled, it is not allowed to set subaccount's USDT-Ⓜ futures commission adjustment on any symbol</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="symbol">Symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub account USDT-Ⓜ futures commissions result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.ChangeSubAccountCoinFuturesCommissionAdjustmentAsync(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Change Sub Account COIN-Ⓜ Futures Commission Adjustment
            <para>This request will change the COIN-Ⓜ futures commission for a sub account</para>
            <para>You need to enable "trade" option for the api key which requests this endpoint</para>
            <para>The sub-account's COIN-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment</para>
            <para>If futures disabled, it is not allowed to set subaccount's COIN-Ⓜ futures commission adjustment on any symbol</para>
            <para>Different symbols have the same commission for the same pair</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="pair">Pair</param>
            <param name="makerAdjustment">Maker adjustment (100 for 0.01%)</param>
            <param name="takerAdjustment">Taker adjustment (100 for 0.01%)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub account coin futures commission result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetSubAccountCoinFuturesCommissionAdjustmentAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account COIN-Ⓜ Futures Commission Adjustment
            <para>The sub-account's COIN-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment</para>
            <para>If pair not sent, commission adjustment of all symbols will be returned</para>
            <para>If futures disabled, it is not allowed to set subaccount's COIN-Ⓜ futures commission adjustment on any symbol</para>
            <para>Different symbols have the same commission for the same pair</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="pair">Pair</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Sub account coin futures commissions result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetBrokerAccountInfoAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Broker Account Information
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Broker information</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.TransferUniversalAsync(System.String,System.Decimal,System.String,Binance.Net.Enums.BrokerageAccountType,System.String,Binance.Net.Enums.BrokerageAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Sub Account Transfer Universal
            <para>You need to enable "internal transfer" option for the api key which requests this endpoint</para>
            <para>Transfer from master account if fromId not sent</para>
            <para>Transfer to master account if toId not sent</para>
            <para>Transfer between futures account is not supported</para>
            </summary>
            <param name="asset">Asset</param>
            <param name="quantity">Quantity</param>
            <param name="fromId">From id</param>
            <param name="fromAccountType">From type</param>
            <param name="toId">To id</param>
            <param name="toAccountType">To type</param>
            <param name="clientTransferId">Client transfer id, must be unique</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetTransferHistoryUniversalAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Transfer History Universal
            <para>Either fromId or toId must be sent. Return fromId equal master account by default</para>
            <para>Only get the latest history of past 30 days</para>
            <para>If showAllStatus is true, the status in response will show four types: INIT,PROCESS,SUCCESS,FAILURE</para>
            </summary>
            <param name="fromId">From id</param>
            <param name="toId">To id</param>
            <param name="clientTransferId">Client transfer id</param>
            <param name="startDate">From date</param>
            <param name="endDate">To date</param>
            <param name="page">Page</param>
            <param name="limit">Limit (default 500, max 500)</param>
            <param name="showAllStatus">Show all status</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer history</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.TransferAsync(System.String,System.Decimal,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Sub Account Transfer (Spot)
            <para>You need to enable "internal transfer" option for the api key which requests this endpoint</para>
            <para>Transfer from master account if fromId not sent</para>
            <para>Transfer to master account if toId not sent</para>
            </summary>
            <param name="asset">Asset</param>
            <param name="quantity">Quantity</param>
            <param name="fromId">From id</param>
            <param name="toId">To id</param>
            <param name="clientTransferId">Client transfer id, must be unique</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.TransferFuturesAsync(System.String,System.Decimal,Binance.Net.Objects.Models.Spot.Brokerage.SubAccountData.BinanceBrokerageFuturesType,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Sub Account Transfer (Futures)
            <para>You need to enable "internal transfer" option for the api key which requests this endpoint</para>
            <para>Transfer from master account if fromId not sent</para>
            <para>Transfer to master account if toId not sent</para>
            <para>Each master account could transfer 5000 times/min</para>
            </summary>
            <param name="asset">Asset</param>
            <param name="quantity">Quantity</param>
            <param name="futuresType">Futures type</param>
            <param name="fromId">From id</param>
            <param name="toId">To id</param>
            <param name="clientTransferId">Client transfer id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetTransferHistoryAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Transfer History (Spot)
            <para>If showAllStatus is true, the status in response will show four types: INIT,PROCESS,SUCCESS,FAILURE</para>
            <para>If showAllStatus is false, the status in response will show three types: INIT,PROCESS,SUCCESS</para>
            </summary>
            <param name="fromId">From id</param>
            <param name="toId">To id</param>
            <param name="clientTransferId">Client transfer id</param>
            <param name="startDate">From date</param>
            <param name="endDate">To date</param>
            <param name="page">Page</param>
            <param name="limit">Limit (default 500, max 500)</param>
            <param name="showAllStatus">Show all status</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer history</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetTransferFuturesHistoryAsync(System.String,Binance.Net.Objects.Models.Spot.Brokerage.SubAccountData.BinanceBrokerageFuturesType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Transfer History (Futures)
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="futuresType">Futures type</param>
            <param name="startDate">From date (default 30 days records)</param>
            <param name="endDate">To date (default 30 days records)</param>
            <param name="page">Page (default 1)</param>
            <param name="limit">Limit (default 50, max 500)</param>
            <param name="clientTransferId">Client transfer id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer history</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetSubAccountDepositHistoryAsync(System.String,System.String,System.Nullable{Binance.Net.Objects.Models.Spot.Brokerage.SubAccountData.BinanceBrokerageSubAccountDepositStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Sub Account Deposit History
            <para>Please notice the default startDate and endDate to make sure that time interval is within 0-7 days</para>
            <para>If both startDate and endDate are sent, time between startDate and endDate must be less than 7 days</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="coin">Coin</param>
            <param name="status">Status</param>
            <param name="startDate">From date (default 7 days from current timestamp)</param>
            <param name="endDate">To date (default present timestamp)</param>
            <param name="limit">Limit (default 500)</param>
            <param name="offset">Offset (default 0)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetBrokerCommissionRebatesRecentAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Broker Commission Rebate Recent Record (Spot)
            <para>Only get the latest history of past 7 days</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="startDate">From date</param>
            <param name="endDate">To date</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 500, max 500)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Rebates history</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetBrokerFuturesCommissionRebatesHistoryAsync(Binance.Net.Objects.Models.Spot.Brokerage.SubAccountData.BinanceBrokerageFuturesType,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Broker Futures Commission Rebate Record
            </summary>
            <param name="futuresType">Futures type</param>
            <param name="startDate">Start date</param>
            <param name="endDate">End date</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 10, max 100)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Rebate records</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.ChangeBnbBurnForSubAccountSpotAndMarginAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable Or Disable BNB Burn for Sub Account SPOT and MARGIN
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="spotBnbBurn">"true" or "false", spot and margin whether use BNB to pay for transaction fees or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.ChangeBnbBurnForSubAccountMarginInterestAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable Or Disable BNB Burn for Sub Account Margin Interest
            <para>Sub account must be enabled margin before using this switch</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="interestBnbBurn">"true" or "false", margin loan whether uses BNB to pay for margin interest or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetBnbBurnStatusForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get BNB Burn Status for Sub Account
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Status</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetSubAccountSpotAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Spot Asset info
            <para>If subAccountId is not sent, the size must be sent</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 10, max 20)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Asset info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetSubAccountMarginAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Margin Asset info
            <para>If subAccountId is not sent, the size must be sent</para>
            </summary>
            <param name="subAccountId">Sub account id</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 10, max 20)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Asset info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiBrokerage.GetSubAccountFuturesAssetInfoAsync(Binance.Net.Objects.Models.Spot.Brokerage.SubAccountData.BinanceBrokerageFuturesType,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Query Sub Account Futures Asset info
            <para>If subAccountId is not sent, the size must be sent</para>
            </summary>
            <param name="futuresType">Futures type</param>
            <param name="subAccountId">Sub account id</param>
            <param name="page">Page (default 1)</param>
            <param name="size">Size (default 10, max 20)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Asset info</returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures">
            <summary>
            Binance futures interaction endpoints
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.TransferFuturesAccountAsync(System.String,System.Decimal,Binance.Net.Enums.FuturesTransferType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Execute a transfer between the spot account and a futures account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#new-future-account-transfer-user_data" /></para>
            </summary>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="transferType">The transfer direction</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The transaction id</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.GetFuturesTransferHistoryAsync(System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of transfers between spot and futures account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-future-account-transaction-history-list-user_data" /></para>
            </summary>
            <param name="asset">The asset to get history for</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">The page to return</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>History</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.BorrowForCrossCollateralAsync(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Borrow for cross-collateral
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#borrow-for-cross-collateral-trade" /></para>
            </summary>
            <param name="asset">The asset to borrow</param>
            <param name="quantity">The quantity to borrow</param>
            <param name="collateralAsset">The asset to use as collateral</param>
            <param name="collateralQuantity">The quantity of collateral asset to use</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Borrow result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.GetCrossCollateralBorrowHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross collateral borrow history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#cross-collateral-borrow-history-user_data" /></para>
            </summary>
            <param name="asset">The asset to get history for</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>History</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.RepayForCrossCollateralAsync(System.String,System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Repay for cross-collateral
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#repay-for-cross-collateral-trade" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="quantity">The quantity to repay</param>
            <param name="collateralAsset">The collateral asset to repay</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Repay result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.GetCrossCollateralRepayHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross collateral borrow history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#cross-collateral-repayment-history-user_data" /></para>
            </summary>
            <param name="asset">The asset to get history for</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>History</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.GetCrossCollateralWalletAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross-collateral wallet info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#cross-collateral-wallet-v2-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Wallet</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.GetCrossCollateralInformationAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross-collateral info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#cross-collateral-information-v2-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.GetRateAfterAdjustLoanToValueAsync(System.String,System.String,System.Decimal,Binance.Net.Enums.AdjustRateDirection,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Calculate rate after adjust cross-collateral loan to value
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#calculate-rate-after-adjust-cross-collateral-ltv-v2-user_data" /></para>
            </summary>
            <param name="collateralAsset">The collateral asset</param>
            <param name="loanAsset">The loan asset</param>
            <param name="quantity">The quantity</param>
            <param name="direction">The direction</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>After collateral rate</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.GetMaxAmountForAdjustCrossCollateralLoanToValueAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get max quantity for adjust cross-collateral LTV
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-max-amount-for-adjust-cross-collateral-ltv-v2-user_data" /></para>
            </summary>
            <param name="collateralAsset">The collateral asset</param>
            <param name="loanAsset">The loan asset</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Max quantity</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.AdjustCrossCollateralLoanToValueAsync(System.String,System.String,System.Decimal,Binance.Net.Enums.AdjustRateDirection,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Adjust cross collateral LTV
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#adjust-cross-collateral-ltv-v2-trade" /></para>
            </summary>
            <param name="collateralAsset">The collateral asset</param>
            <param name="loanAsset">The loan asset</param>
            <param name="quantity">The quantity</param>
            <param name="direction">The direction</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Adjust result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.GetAdjustCrossCollateralLoanToValueHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross collateral LTV adjustment history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#adjust-cross-collateral-ltv-history-user_data" /></para>
            </summary>
            <param name="loanAsset">The loan asset</param>
            <param name="collateralAsset">The collateral asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Adjustment history</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiFutures.GetCrossCollateralLiquidationHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross collateral liquidation history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#cross-collateral-liquidation-history-user_data" /></para>
            </summary>
            <param name="collateralAsset">The collateral asset</param>
            <param name="loanAsset">The loan asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Liquidation history</returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiCryptoLoans">
            <summary>
            Binance Spot Crypto loans endpoints
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiCryptoLoans.GetIncomeHistoryAsync(System.String,System.Nullable{Binance.Net.Enums.LoanIncomeType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get income history from crypto loans
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-crypto-loans-income-history-user_data" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="type">Filter by type of incoming</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiCryptoLoans.BorrowAsync(System.String,System.String,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Take a crypto loan
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#borrow-crypto-loan-borrow-trade" /></para>
            </summary>
            <param name="loanAsset">Asset to loan</param>
            <param name="collateralAsset">Collateral asset</param>
            <param name="loanTerm">Loan term in days, 7/14/30/90/180</param>
            <param name="loanQuantity">Quantity to loan in loan asset</param>
            <param name="collateralQuantity">Quantity to loan in collateral asset</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiCryptoLoans.GetBorrowHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get borrow order history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#borrow-get-loan-borrow-history-user_data" /></para>
            </summary>
            <param name="orderId">Filter by order id</param>
            <param name="loanAsset">Filter by loan asset</param>
            <param name="collateralAsset">Filter by collateral asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page number</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiCryptoLoans.GetOpenBorrowOrdersAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get ongoing loan orders
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#borrow-get-loan-ongoing-orders-user_data" /></para>
            </summary>
            <param name="orderId">Filter by order id</param>
            <param name="loanAsset">Filter by loan asset</param>
            <param name="collateralAsset">Filter by collateral asset</param>
            <param name="page">Page number</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiCryptoLoans.RepayAsync(System.Int64,System.Decimal,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Repay a loan
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#repay-crypto-loan-repay-trade" /></para>
            </summary>
            <param name="orderId">Order id to repay</param>
            <param name="quantity">Quantity to repay</param>
            <param name="repayWithBorrowedAsset">True to repay with the borrowed asset, false to repay with collateral asset</param>
            <param name="collateralReturn">Return extra colalteral to spot account</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiCryptoLoans.GetRepayHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get loan repayment history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#repay-get-loan-repayment-history-user_data" /></para>
            </summary>
            <param name="orderId">Filter by order id</param>
            <param name="loanAsset">Filter by loan asset</param>
            <param name="collateralAsset">Filter by collateral asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page number</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiCryptoLoans.AdjustLTVAsync(System.Int64,System.Decimal,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Adjust LTV for a loan
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#adjust-ltv-crypto-loan-adjust-ltv-trade" /></para>
            </summary>
            <param name="orderId">Order id</param>
            <param name="quantity">Adjustment quantity</param>
            <param name="addOrRmove">True for add, false to reduce</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiCryptoLoans.GetLtvAdjustHistoryAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get LTV adjustment history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#adjust-ltv-get-loan-ltv-adjustment-history-user_data" /></para>
            </summary>
            <param name="orderId">Filter by order id</param>
            <param name="loanAsset">Filter by loan asset</param>
            <param name="collateralAsset">Filter by collateral asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page number</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining">
            <summary>
            Binance Spot Mining endpoints
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.GetMiningCoinListAsync(System.Threading.CancellationToken)">
            <summary>
            Gets mining coins info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#acquiring-coinname-market_data" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Coins info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.GetMiningAlgorithmListAsync(System.Threading.CancellationToken)">
            <summary>
            Gets mining algorithms info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#acquiring-algorithm-market_data" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Algorithms info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.GetMinerDetailsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets miner details
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#request-for-detail-miner-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">Mining account</param>
            <param name="workerName">Miners name</param>
            <param name="ct">Cancellation token</param>
            <returns>Miner details</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.GetMinerListAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{Binance.Net.Enums.MinerStatus},System.Threading.CancellationToken)">
            <summary>
            Gets miner list
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#request-for-miner-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">Mining account</param>
            <param name="page">Result page</param>
            <param name="sortAscending">Sort in ascending order</param>
            <param name="sortColumn">Column to sort by</param>
            <param name="workerStatus">Filter by status</param>
            <param name="ct">Cancellation token</param>
            <returns>Miner list</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.GetMiningRevenueListAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets revenue list
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#earnings-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">Mining account</param>
            <param name="page">Result page</param>
            <param name="pageSize">Results per page</param>
            <param name="coin">Coin</param>
            <param name="startDate">Start date</param>
            <param name="endDate">End date</param>
            <param name="ct">Cancellation token</param>
            <returns>Revenue list</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.GetMiningOtherRevenueListAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get other revenue list
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#extra-bonus-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">Mining account</param>
            <param name="page">Result page</param>
            <param name="pageSize">Results per page</param>
            <param name="coin">Coin</param>
            <param name="startDate">Start date</param>
            <param name="endDate">End date</param>
            <param name="ct">Cancellation token</param>
            <returns>Revenue list</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.GetMiningStatisticsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get mining statistics
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#statistic-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">User name</param>
            <param name="ct">Cancellation token</param>
            <returns>Mining statistics</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.GetMiningAccountListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets mining account list
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#account-list-user_data" /></para>
            </summary>
            <param name="algorithm">Algorithm</param>
            <param name="userName">Mining account user name</param>
            <param name="ct">Cancellation token</param>
            <returns>Revenue list</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.GetHashrateResaleListAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets hash rate resale list
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#hashrate-resale-list-user_data" /></para>
            </summary>
            <param name="page">Page</param>
            <param name="pageSize">Results per page</param>
            <param name="ct">Cancellation token</param>
            <returns>Resale list</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.GetHashrateResaleDetailsAsync(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets hash rate resale details
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#hashrate-resale-detail-user_data" /></para>
            </summary>
            <param name="configId">The mining id</param>
            <param name="userName">Mining account</param>
            <param name="page">Page</param>
            <param name="pageSize">Results per page</param>
            <param name="ct">Cancellation token</param>
            <returns>Resale details</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.PlaceHashrateResaleRequestAsync(System.String,System.String,System.DateTime,System.DateTime,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Hashrate resale request
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#hashrate-resale-request-user_data" /></para>
            </summary>
            <param name="userName">Mining account</param>
            <param name="algorithm">Transfer algorithm</param>
            <param name="startDate">Resale start time</param>
            <param name="endDate">Resale end time</param>
            <param name="toUser">To mining account</param>
            <param name="hashRate">Resale hashrate h/s must be transferred (BTC is greater than 500000000000 ETH is greater than 500000)</param>
            <param name="ct">Cancellation token</param>
            <returns>Mining account</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiMining.CancelHashrateResaleRequestAsync(System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel Hashrate Resale Configuration
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#cancel-hashrate-resale-configuration-user_data" /></para>
            </summary>
            <param name="configId">Mining id</param>
            <param name="userName">Mining account</param>
            <param name="ct">Cancellation token</param>
            <returns>Success</returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings">
            <summary>
            Binance Spot Savings endpoints
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.GetFlexibleProductListAsync(System.Nullable{Binance.Net.Enums.ProductStatus},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get product list
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-flexible-product-list-user_data" /></para>
            </summary>
            <param name="status">Filter by status</param>
            <param name="featured">Filter by featured</param>
            <param name="page">Page to retrieve</param>
            <param name="pageSize">Page size to return</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of product</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.GetLeftDailyPurchaseQuotaOfFlexableProductAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the purchase quota left for a product
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-left-daily-purchase-quota-of-flexible-product-user_data" /></para>
            </summary>
            <param name="productId">Id of the product</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Quota left</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.PurchaseFlexibleProductAsync(System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Purchase flexible product
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#purchase-flexible-product-user_data" /></para>
            </summary>
            <param name="productId">Id of the product</param>
            <param name="quantity">The quantity to purchase</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Purchase id</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.GetLeftDailyRedemptionQuotaOfFlexibleProductAsync(System.String,Binance.Net.Enums.RedeemType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the redemption quota left for a product
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-left-daily-redemption-quota-of-flexible-product-user_data" /></para>
            </summary>
            <param name="productId">Id of the product</param>
            <param name="type">Type</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Quota left</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.RedeemFlexibleProductAsync(System.String,System.Decimal,Binance.Net.Enums.RedeemType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Redeem flexible product
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#redeem-flexible-product-user_data" /></para>
            </summary>
            <param name="productId">Id of the product</param>
            <param name="type">Redeem type</param>
            <param name="quantity">The quantity to redeem</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.GetFlexibleProductPositionAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get flexible product position
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-flexible-product-position-user_data" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="page">Page to retrieve</param>
            <param name="pageSize">Page size to return</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Flexible product position(s)</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.GetFixedAndCustomizedFixedProjectListAsync(Binance.Net.Enums.ProjectType,System.String,System.Nullable{Binance.Net.Enums.ProductStatus},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get fixed and customized fixed project list
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-fixed-and-activity-project-list-user_data" /></para>
            </summary>
            <param name="type">Type of project</param>
            <param name="asset">Asset</param>
            <param name="status">Filter by status</param>
            <param name="sortAscending">If should sort ascending</param>
            <param name="sortBy">Sort by. Valid values: "START_TIME", "LOT_SIZE", "INTEREST_RATE", "DURATION"; default "START_TIME"</param>
            <param name="currentPage">Result page</param>
            <param name="size">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Project list</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.PurchaseCustomizedFixedProjectAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Purchase customized fixed project
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#purchase-fixed-activity-project-user_data" /></para>
            </summary>
            <param name="projectId">Id of the project</param>
            <param name="lot">The lot</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Purchase id</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.GetCustomizedFixedProjectPositionsAsync(System.String,System.String,System.Nullable{Binance.Net.Enums.ProjectStatus},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get customized fixed project position
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-fixed-activity-project-position-user_data" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="projectId">The project id</param>
            <param name="status">Filter by status</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Customized fixed project position</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.GetLendingAccountAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get lending account info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#lending-account-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Lending account</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.GetPurchaseRecordsAsync(Binance.Net.Enums.LendingType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get purchase records
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-purchase-record-user_data" /></para>
            </summary>
            <param name="lendingType">Lending type</param>
            <param name="asset">Asset</param>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The purchase records</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.GetRedemptionRecordsAsync(Binance.Net.Enums.LendingType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get redemption records
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-redemption-record-user_data" /></para>
            </summary>
            <param name="lendingType">Lending type</param>
            <param name="asset">Asset</param>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The redemption records</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.GetLendingInterestHistoryAsync(Binance.Net.Enums.LendingType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get interest history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-interest-history-user_data-2" /></para>
            </summary>
            <param name="lendingType">Lending type</param>
            <param name="asset">Asset</param>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The interest history</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSavings.ChangeToDailyPositionAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Changed fixed/activity position to daily position
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#change-fixed-activity-position-to-daily-position-user_data" /></para>
            </summary>
            <param name="projectId">Id of the project</param>
            <param name="lot">The lot</param>
            <param name="positionId">For fixed position</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Purchase id</returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount">
            <summary>
            Binance Spot Subaccount endpoints
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gets a list of sub accounts associated with this master account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-sub-account-list-for-master-account" /></para>
            </summary>
            <param name="email">Filter the list by email</param>
            <param name="page">The page of the results</param>
            <param name="limit">The max amount of results to return</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="isFreeze">Is freezed</param>
            <param name="ct">Cancellation token</param>
            <returns>List of sub accounts</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountTransferHistoryForMasterAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the transfer history of a sub account (from the master account) 
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-sub-account-spot-asset-transfer-history-for-master-account" /></para>
            </summary>
            <param name="fromEmail">Filter the history by from email</param>
            <param name="toEmail">Filter the history by to email</param>
            <param name="startTime">Filter the history by startTime</param>
            <param name="endTime">Filter the history by endTime</param>
            <param name="page">The page of the results</param>
            <param name="limit">The max amount of results to return</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of transfers</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.TransferSubAccountAsync(Binance.Net.Enums.TransferAccountType,Binance.Net.Enums.TransferAccountType,System.String,System.Decimal,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers an asset form/to a sub account. If fromEmail or toEmail is not send it is interpreted as from/to the master account. Transfer between futures accounts is not supported
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#sub-account-futures-asset-transfer-for-master-account" /></para>
            </summary>
            <param name="fromEmail">From which account to transfer</param>
            <param name="fromAccountType">Account type to transfer from</param>
            <param name="toEmail">To which account to transfer</param>
            <param name="toAccountType">Account type to transfer to</param>
            <param name="asset">The asset to transfer</param>
            <param name="symbol">The sybol to transfer, only for isolated margin</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The result of the transfer</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountAssetsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets list of balances for a sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-sub-account-assets-for-master-account" /></para>
            </summary>
            <param name="email">For which account to get the assets</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of balances</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountDepositAddressAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the deposit address for an asset to a sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-sub-account-deposit-address-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to deposit to</param>
            <param name="asset">The asset of the deposit</param>
            <param name="network">The coin network</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The deposit address</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountDepositHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the deposit history for a sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-sub-account-deposit-history-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to get history for</param>
            <param name="asset">Filter for an asset</param>
            <param name="startTime">Only return deposits placed later this</param>
            <param name="endTime">Only return deposits placed before this</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Offset results by this</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The deposit history</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountStatusAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Sub-account's Status on Margin/Futures(For Master Account)
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-sub-account-39-s-status-on-margin-futures-for-master-account" /></para>
            </summary>
            <param name="email">Filter the list by email</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of sub accounts status</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.EnableMarginForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enables margin for a sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#enable-margin-for-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to enable margin for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Margin enable status</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountMarginDetailsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets margin details for a sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-detail-on-sub-account-39-s-margin-account-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to get margin details for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Margin details</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountsMarginSummaryAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets margin summary for sub accounts
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-summary-of-sub-account-39-s-margin-account-for-master-account" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Margin summary</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.EnableFuturesForSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enables futures for a sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#enable-futures-for-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">The sub account email to enable futures for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Futures status</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountFuturesDetailsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets futures details for a sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-detail-on-sub-account-39-s-futures-account-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to get future details for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Futures details</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountFuturesDetailsAsync(Binance.Net.Enums.FuturesAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets futures details for a sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-detail-on-sub-account-39-s-futures-account-v2-for-master-account" /></para>
            </summary>
            <param name="email">The email of the account to get future details for</param>
            <param name="futuresType">The account type to get future details for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Futures details</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountsFuturesSummaryAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets futures summary for sub accounts
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-summary-of-sub-account-39-s-futures-account-for-master-account" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Futures summary</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountsFuturesPositionRiskAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets futures position risk for a sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-futures-position-risk-of-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Position risk</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountsFuturesPositionRiskAsync(Binance.Net.Enums.FuturesAccountType,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets futures position risk for a sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-futures-position-risk-of-sub-account-v2-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="futuresType">The account type to get future details for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Position risk</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.TransferSubAccountFuturesAsync(System.String,System.String,System.Decimal,Binance.Net.Enums.SubAccountFuturesTransferType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers from or to a futures sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#futures-transfer-for-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="type">The type of the transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The result of the transfer</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.TransferSubAccountMarginAsync(System.String,System.String,System.Decimal,Binance.Net.Enums.SubAccountMarginTransferType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers from or to a margin sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#margin-transfer-for-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="type">The type of the transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The result of the transfer</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.TransferSubAccountToSubAccountAsync(System.String,System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers to another sub account of the same master
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#transfer-to-sub-account-of-same-master-for-sub-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The result of the transfer</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.TransferSubAccountToMasterAsync(System.String,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers to master account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#transfer-to-master-for-sub-account" /></para>
            </summary>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The result of the transfer</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountTransferHistoryForSubAccountAsync(System.String,System.Nullable{Binance.Net.Enums.SubAccountTransferSubAccountType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the transfer history of a sub account (from the sub account)
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#sub-account-transfer-history-for-sub-account" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="type">Filter by type of transfer</param>
            <param name="startTime">Only return transfers later than this</param>
            <param name="endTime">Only return transfers before this</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer history</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetSubAccountBtcValuesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get BTC valued asset summary of subaccounts.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-sub-account-spot-assets-summary-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="page">The page</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Btc asset values</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.CreateVirtualSubAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Create a virtual sub account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#create-a-virtual-sub-account-for-master-account" /></para>
            </summary>
            <param name="subAccountString">String based with which a subaccount email will be generated. Should not contain special characters</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.EnableBlvtForSubAccountAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable or disable blvt
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#enable-leverage-token-for-sub-account-for-master-account" /></para>
            </summary>
            <param name="email">Email of the sub account</param>
            <param name="enable">Enable or disable (only true for now)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetUniversalTransferHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of universal transfers
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-universal-transfer-history-for-master-account" /></para>
            </summary>
            <param name="fromEmail">Filter the list by from email (fromEmail and toEmail cannot be present at same time)</param>
            <param name="toEmail">Filter the list by to email (fromEmail and toEmail cannot be present at same time)</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">The page of the results</param>
            <param name="limit">The max amount of results to return (Default 500, max 500)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of universal transfers</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.UpdateIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Update the ip restriction for a sub-account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#update-ip-restriction-for-sub-account-api-key-for-master-account" /></para>
            </summary>
            <param name="email">The sub account email</param>
            <param name="apiKey">The sub account api key</param>
            <param name="ipRestrict">Enable or disable ip restrictions</param>
            <param name="ipAddresses">Addresses to whitelist</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.RemoveIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Remove the ip restriction for a sub-account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#delete-ip-list-for-a-sub-account-api-key-for-master-account" /></para>
            </summary>
            <param name="email">The sub account email</param>
            <param name="apiKey">The sub account api key</param>
            <param name="ipAddresses">Addresses to remove from whitelist</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.GeneralApi.IBinanceClientGeneralApiSubAccount.GetIpRestrictionForSubAccountApiKeyAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the ip restriction for a sub-account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-ip-restriction-for-a-sub-account-api-key-for-master-account" /></para>
            </summary>
            <param name="email">The sub account email</param>
            <param name="apiKey">The sub account api key</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.IBinanceClient">
            <summary>
            Client for accessing the Binance Rest API. 
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.IBinanceClient.GeneralApi">
            <summary>
            General API endpoints
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.IBinanceClient.CoinFuturesApi">
            <summary>
            Coin futures API endpoints
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.IBinanceClient.SpotApi">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.IBinanceClient.UsdFuturesApi">
            <summary>
            Usd futures API endpoints
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.IBinanceClient.SetApiCredentials(Binance.Net.Objects.BinanceApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.IBinanceSocketClient">
            <summary>
            Client for accessing the Binance websocket API
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.IBinanceSocketClient.CoinFuturesStreams">
            <summary>
            Coin futures streams
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.IBinanceSocketClient.SpotStreams">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.IBinanceSocketClient.UsdFuturesStreams">
            <summary>
            Usd futures streams
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.IBinanceSocketClient.SetApiCredentials(Binance.Net.Objects.BinanceApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApi">
            <summary>
            Binance Spot API endpoints
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApi.CommonSpotClient">
            <summary>
            Get the ISpotClient for this client. This is a common interface which allows for some basic operations without knowing any details of the exchange.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount">
            <summary>
            Binance Spot account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account information, including balances
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#account-information-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The account information</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetDailySpotAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get a daily account snapshot (balances)
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#daily-account-snapshot-user_data" /></para>
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="limit">The amount of days to retrieve</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetDailyMarginAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get a daily account snapshot (assets)
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#daily-account-snapshot-user_data" /></para>
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="limit">The amount of days to retrieve</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetDailyFutureAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get a daily account snapshot (assets and positions)
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#daily-account-snapshot-user_data" /></para>
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="limit">The amount of days to retrieve</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetAccountStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the status of the account associated with the api key/secret
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#account-status-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Account status</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetFundingWalletAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get funding wallet assets
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#funding-wallet-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="needBtcValuation">Return BTC valuation</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of assets</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetAPIKeyPermissionsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get permission info for the current API key
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-api-key-permission-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Permission info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetUserAssetsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets information of assets for a user
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#all-coins-39-information-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Assets info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetBalancesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieve balance info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#user-asset-user_data" /></para>
            </summary>
            <param name="asset">Return for this asset</param>
            <param name="needBtcValuation">Whether the response should include the BtcValuation. If false (default) BtcValuation will be 0.</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetAssetDividendRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get asset dividend records
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#asset-dividend-record-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="startTime">Filter by start time from</param>
            <param name="endTime">Filter by end time till</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Dividend records</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.DisableFastWithdrawSwitchAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            This request will disable fastwithdraw switch under your account.
            You need to enable "trade" option for the api key which requests this endpoint.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#disable-fast-withdraw-switch-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.EnableFastWithdrawSwitchAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             This request will enable fastwithdraw switch under your account.
             You need to enable "trade" option for the api key which requests this endpoint.
            
             When Fast Withdraw Switch is on, transferring funds to a Binance account will be done instantly.
             There is no on-chain transaction, no transaction ID and no withdrawal fee.
             <para><a href="https://binance-docs.github.io/apidocs/spot/en/#enable-fast-withdraw-switch-user_data" /></para>
             </summary>
             <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
             <param name="ct">Cancellation token</param>
             <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetDustLogAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the history of dust conversions
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#dustlog-user_data" /></para>
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The history of dust conversions</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetAssetsForDustTransferAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get assets that can be converted to BNB
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.DustTransferAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Converts dust (small amounts of) assets to BNB 
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#dust-transfer-user_data" /></para>
            </summary>
            <param name="assets">The assets to convert to BNB</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Dust transfer result</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetBnbBurnStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the status of the BNB burn switch for spot trading and margin interest
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-bnb-burn-status-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.SetBnbBurnStatusAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Sets the status of the BNB burn switch for spot trading and margin interest
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#toggle-bnb-burn-on-spot-trade-and-margin-interest-user_data" /></para>
            </summary>
            <param name="spotTrading">If BNB burning should be enabled for spot trading</param>
            <param name="marginInterest">If BNB burning should be enabled for margin interest</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.TransferAsync(Binance.Net.Enums.UniversalTransferType,System.String,System.Decimal,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers between accounts
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#user-universal-transfer-user_data" /></para>
            </summary>
            <param name="type">The type of transfer</param>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">The quantity to transfer</param>
            <param name="fromSymbol">From symbol when transfering from/to isolated margin</param>
            <param name="toSymbol">To symbol when transfering from/to isolated margin</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetTransfersAsync(Binance.Net.Enums.UniversalTransferType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get transfer history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-user-universal-transfer-history-user_data" /></para>
            </summary>
            <param name="type">The type of transfer</param>
            <param name="startTime">Filter by startTime</param>
            <param name="endTime">Filter by endTime</param>
            <param name="page">The page</param>
            <param name="pageSize">Results per page</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetFiatPaymentHistoryAsync(Binance.Net.Enums.OrderSide,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Fiat payment history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-fiat-payments-history-user_data" /></para>
            </summary>
            <param name="side">Filter by side</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Return a specific page</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetFiatDepositWithdrawHistoryAsync(Binance.Net.Enums.TransactionType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Fiat deposit/withdrawal history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#fiat-endpoints" /></para>
            </summary>
            <param name="side">Filter by side</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Return a specific page</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.StartUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Starts a user stream by requesting a listen key. This listen key can be used in subsequent requests to BinanceSocketClient.Futures.SubscribeToUserDataUpdates. The stream will close after 60 minutes unless a keep alive is send.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#listen-key-spot" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Listen key</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a keep alive for the current user stream listen key to keep the stream from closing. Stream auto closes after 60 minutes if no keep alive is send. 30 minute interval for keep alive is recommended.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#listen-key-spot" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stops the current user stream
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#listen-key-spot" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{Binance.Net.Enums.WalletType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Withdraw assets from Binance to an address
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#withdraw-user_data" /></para>
            </summary>
            <param name="asset">The asset to withdraw</param>
            <param name="address">The address to send the funds to</param>
            <param name="addressTag">Secondary address identifier for assets like XRP,XMR etc.</param>
            <param name="withdrawOrderId">Custom client order id</param>
            <param name="transactionFeeFlag">When making internal transfer, true for returning the fee to the destination account; false for returning the fee back to the departure account. Default false.</param>
            <param name="quantity">The quantity to withdraw</param>
            <param name="network">The network to use</param>
            <param name="walletType">The wallet type for withdraw</param>
            <param name="name">Description of the address</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Withdrawal confirmation</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetWithdrawalHistoryAsync(System.String,System.String,System.Nullable{Binance.Net.Enums.WithdrawalStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the withdrawal history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#withdraw-history-supporting-network-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="withdrawOrderId">Filter by withdraw order id</param>
            <param name="status">Filter by status</param>
            <param name="startTime">Filter start time from</param>
            <param name="endTime">Filter end time till</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <param name="limit">Add limit. Default: 1000, Max: 1000</param>
            <param name="offset">Add offset</param>
            <returns>List of withdrawals</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetDepositHistoryAsync(System.String,System.Nullable{Binance.Net.Enums.DepositStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the deposit history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#deposit-history-supporting-network-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="status">Filter by status</param>
            <param name="limit">Amount of results</param>
            <param name="offset">Offset the results</param>
            <param name="startTime">Filter start time from</param>
            <param name="endTime">Filter end time till</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of deposits</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetDepositAddressAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the deposit address for an asset
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#deposit-address-supporting-network-user_data" /></para>
            </summary>
            <param name="asset">Asset to get address for</param>
            <param name="network">Network</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Deposit address</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetMarginLevelInformationAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get personal margin level information for your account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-summary-of-margin-account-user_data" /></para>
            </summary>
            <param name="email">account email</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Margin Level Information</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.CrossMarginTransferAsync(System.String,System.Decimal,Binance.Net.Enums.TransferDirectionType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Execute transfer between spot account and cross margin account.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#margin-account-trade" /></para>
            </summary>
            <param name="asset">The asset being transferred, e.g., BTC</param>
            <param name="quantity">The quantity to be transferred</param>
            <param name="type">TransferDirection (MainToMargin/MarginToMain)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transaction Id</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.MarginBorrowAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Borrow. Apply for a loan. 
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#margin-account-borrow-margin" /></para>
            </summary>
            <param name="asset">The asset being borrow, e.g., BTC</param>
            <param name="quantity">The quantity to be borrow</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="symbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transaction Id</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.MarginRepayAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Repay loan for margin account.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#margin-account-repay-margin" /></para>
            </summary>
            <param name="asset">The asset being repay, e.g., BTC</param>
            <param name="quantity">The quantity to be borrow</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="symbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transaction Id</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetMarginDustLogAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the history of margin dust conversions
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#margin-dustlog-user_data" /></para>
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The history of dust conversions</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetCrossMarginTransferHistoryAsync(Binance.Net.Enums.TransferDirection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of transfers
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#margin-account-cancel-all-open-orders-on-a-symbol-trade" /></para>
            </summary>
            <param name="direction">The direction of the the transfers to retrieve</param>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of transfers</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetMarginLoansAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query loan records
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-loan-record-user_data" /></para>
            </summary>
            <param name="asset">The records asset</param>
            <param name="transactionId">The id of loan transaction</param>
            <param name="startTime">Time to start getting records from</param>
            <param name="endTime">Time to stop getting records to</param>
            <param name="current">Number of page records</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="limit">The records count size need show</param>
            <param name="archived">Set to true for archived data from 6 months ago</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Loan records</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetMarginRepaysAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query repay records
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-repay-record-user_data" /></para>
            </summary>
            <param name="asset">The records asset</param>
            <param name="transactionId">The id of repay transaction</param>
            <param name="startTime">Time to start getting records from</param>
            <param name="endTime">Time to stop getting records to</param>
            <param name="current">Filter by number</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="size">The records count size need show</param>
            <param name="archived">Set to true for archived data from 6 months ago</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Repay records</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetMarginInterestHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of interest
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-interest-history-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="archived">Set to true for archived data from 6 months ago</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of interest events</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetMarginInterestRateHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of interest rate
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-margin-interest-rate-history-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="vipLevel">Vip level</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of interest rate</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetInterestMarginDataAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross margin interest data
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-cross-margin-fee-data-user_data" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="vipLevel">Vip level</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetMarginForcedLiquidationHistoryAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of forced liquidations
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-force-liquidation-record-user_data" /></para>
            </summary>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of forced liquidations</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetMarginAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query margin account details
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-cross-margin-account-details-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The margin account information</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetMarginMaxBorrowAmountAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query max borrow quantity
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-max-borrow-user_data" /></para>
            </summary>
            <param name="asset">The records asset</param>
            <param name="isolatedSymbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Max quantity</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetMarginMaxTransferAmountAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query max transfer-out quantity 
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-max-transfer-out-amount-user_data" /></para>
            </summary>
            <param name="asset">The records asset</param>
            <param name="isolatedSymbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Max quantity</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetIsolatedMarginTierDataAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin tier data
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-isolated-margin-tier-data-user_data" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="tier">Tier</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetIsolatedMarginAccountTransferHistoryAsync(System.String,System.String,System.Nullable{Binance.Net.Enums.IsolatedMarginTransferDirection},System.Nullable{Binance.Net.Enums.IsolatedMarginTransferDirection},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get history of transfer to and from the isolated margin account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-isolated-margin-transfer-history-user_data" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="asset">Filter by asset</param>
            <param name="from">Filter by direction</param>
            <param name="to">Filter by direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="current">Current page</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetIsolatedMarginAccountAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Isolated margin account info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-isolated-margin-account-info-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetEnabledIsolatedMarginAccountLimitAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get max number of enabled isolated margin accounts
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-enabled-isolated-margin-account-limit-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.EnableIsolatedMarginAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable an isolated margin account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#enable-isolated-margin-account-trade" /></para>
            </summary>
            <param name="symbol">Symbol to enable isoldated margin account for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.DisableIsolatedMarginAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Disabled an isolated margin account info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#disable-isolated-margin-account-trade" /></para>
            </summary>
            <param name="symbol">Symbol to enable isoldated margin account for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.IsolatedMarginAccountTransferAsync(System.String,System.String,Binance.Net.Enums.IsolatedMarginTransferDirection,Binance.Net.Enums.IsolatedMarginTransferDirection,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfer from or to isolated margin account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#isolated-margin-account-transfer-margin" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="symbol">Isolated symbol</param>
            <param name="from">From</param>
            <param name="to">To</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetMarginOrderRateLimitStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin order rate limits
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.StartMarginUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Starts a user stream by requesting a listen key. This listen key can be used in subsequent requests to BinanceSocketClient.Futures.SubscribeToUserDataUpdates. The stream will close after 60 minutes unless a keep alive is send.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#listen-key-margin" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Listen key</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.KeepAliveMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a keep alive for the current user stream listen key to keep the stream from closing. Stream auto closes after 60 minutes if no keep alive is send. 30 minute interval for keep alive is recommended.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#listen-key-margin" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.StopMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stops the current user stream
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#listen-key-margin" /></para>
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.StartIsolatedMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Starts a user stream  for margin account by requesting a listen key. 
            This listen key can be used in subsequent requests to  BinanceSocketClient.Spot.SubscribeToUserDataUpdates  
            The stream will close after 60 minutes unless a keep alive is send.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#listen-key-isolated-margin" /></para>
            </summary>
            <param name="symbol">The isolated symbol</param>
            <param name="ct">Cancellation token</param>
            <returns>Listen key</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.KeepAliveIsolatedMarginUserStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a keep alive for the current user stream for margin account listen key to keep the stream from closing. 
            Stream auto closes after 60 minutes if no keep alive is send. 30 minute interval for keep alive is recommended.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#listen-key-isolated-margin" /></para>
            </summary>
            <param name="symbol">The isolated symbol</param>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.CloseIsolatedMarginUserStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Close the user stream for margin account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#listen-key-isolated-margin" /></para>
            </summary>
            <param name="symbol">The isolated symbol</param>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetTradingStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the trading status for the current account
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#account-api-trading-status-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The trading status of the account</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetOrderRateLimitStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the current used order rate limits
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-current-order-count-usage-trade" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetRebateHistoryAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get rebate history
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-spot-rebate-history-records-user_data" /></para>
            </summary>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Results per page</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetLeveragedTokensUserLimitAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get leveraged tokens user limits
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-blvt-user-limit-info-user_data" /></para>
            </summary>
            <param name="tokenName">Filter by token name</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.SetAutoStakingAsync(Binance.Net.Enums.StakingProductType,System.String,System.Boolean,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set auto staking for a product
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#set-auto-staking-user_data" /></para>
            </summary>
            <param name="product">The staking product</param>
            <param name="positionId">The position</param>
            <param name="renewable">Renewable</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetStakingPersonalQuotaAsync(Binance.Net.Enums.StakingProductType,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get personal staking quota
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-personal-left-quota-of-staking-product-user_data" /></para>
            </summary>
            <param name="product">The staking product</param>
            <param name="productId">Product id</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetPortfolioMarginAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Portfolio margin account info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-portfolio-margin-account-info-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetPortfolioMarginCollateralRateAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get portfolio margin account collateral rates
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#portfolio-margin-collateral-rate-market_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.GetPortfolioMarginBankruptcyLoanAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get portfolio margin bankrupty loan amount
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-portfolio-margin-bankruptcy-loan-amount-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiAccount.PortfolioMarginBankruptcyLoanRepayAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Repay portfolio margin bankruptcy loan
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#portfolio-margin-bankruptcy-loan-repay" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData">
            <summary>
            Binance Spot exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetAssetDetailsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the withdraw/deposit details for an asset
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#asset-detail-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Asset detail</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetProductsAsync(System.Threading.CancellationToken)">
            <summary>
            Get general data for the products available on Binance
            NOTE: This is not an official endpoint and might be changed or removed at any point by Binance
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.PingAsync(System.Threading.CancellationToken)">
            <summary>
            Pings the Binance API
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#test-connectivity" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>True if successful ping, false if no response</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Requests the server for the local time
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#check-server-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Server time</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and symbol list
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#exchange-information" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetExchangeInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and information on the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#exchange-information" /></para>
            </summary>
            <param name="symbol">Symbol to get data for token</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetExchangeInfoAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and information on the provided symbols
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#exchange-information" /></para>
            </summary>
            <param name="symbols">Symbols to get data for token</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetExchangeInfoAsync(Binance.Net.Enums.AccountType,System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and information on the provided symbol based on an account permission
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#exchange-information" /></para>
            </summary>
            <param name="permission">account type</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetExchangeInfoAsync(Binance.Net.Enums.AccountType[],System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and information on the provided symbols based on account permissions
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#exchange-information" /></para>
            </summary>
            <param name="permissions">account type</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetSystemStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the status of the Binance platform
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#system-status-system" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>The system status</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the recent trades for a symbol
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#recent-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol to get recent trades for</param>
            <param name="limit">Result limit</param>
            <param name="ct">Cancellation token</param>
            <returns>List of recent trades</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets the historical  trades for a symbol
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#old-trade-lookup-market_data" /></para>
            </summary>
            <param name="symbol">The symbol to get recent trades for</param>
            <param name="limit">Result limit</param>
            <param name="fromId">From which trade id on results should be retrieved</param>
            <param name="ct">Cancellation token</param>
            <returns>List of recent trades</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets compressed, aggregate trades. Trades that fill at the time, from the same order, with the same price will have the quantity aggregated.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#compressed-aggregate-trades-list" /></para>
            </summary>
            <param name="symbol">The symbol to get the trades for</param>
            <param name="fromId">ID to get aggregate trades from INCLUSIVE.</param>
            <param name="startTime">Time to start getting trades from</param>
            <param name="endTime">Time to stop getting trades from</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The aggregated trades list for the symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#kline-candlestick-data" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetUiKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided symbol. Returns modified kline data, optimized for the presentation of candlestick charts
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#uiklines" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#order-book" /></para>
            </summary>
            <param name="symbol">The symbol to get the order book for</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The order book for the symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetCurrentAvgPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets current average price for a symbol
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#current-average-price" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetTradeFeeAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the trade fee for a symbol
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#trade-fee-user_data" /></para>
            </summary>
            <param name="symbol">Symbol to get withdrawal fee for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Trade fees</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours for the provided symbol
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="ct">Cancellation token</param>
            <returns>Data over the last 24 hours</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours for the provided symbols
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="symbols">The symbols to get the data for</param>
            <param name="ct">Cancellation token</param>
            <returns>Data over the last 24 hours</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours for all symbols
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#24hr-ticker-price-change-statistics" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of data over the last 24 hours</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetRollingWindowTickerAsync(System.String,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Get data based on the last x time, specified as windowSize
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#rolling-window-price-change-statistics" /></para>
            </summary>
            <param name="symbol">The symbol to get data for</param>
            <param name="windowSize">The window size to use</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetRollingWindowTickersAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Get data based on the last x time, specified as windowSize
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#rolling-window-price-change-statistics" /></para>
            </summary>
            <param name="symbols">The symbols to get data for</param>
            <param name="windowSize">The window size to use</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetBookPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for a symbol.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#rolling-window-price-change-statistics" /></para>
            </summary>
            <param name="symbol">Symbol to get book price for</param>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetBookPricesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for a symbol.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#symbol-order-book-ticker" /></para>
            </summary>
            <param name="symbol">Symbol to get book price for</param>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetBookPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for all symbols.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#symbol-order-book-ticker" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the price of a symbol
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#symbol-price-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to get the price for</param>
            <param name="ct">Cancellation token</param>
            <returns>Price of symbol</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetPricesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
             Gets the prices of symbols
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#symbol-price-ticker" /></para>
            </summary>
            <param name="symbols">The symbols to get the price for</param>
            <param name="ct">Cancellation token</param>
            <returns>List of prices</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of the prices of all symbols
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#symbol-price-ticker" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of prices</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetMarginAssetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a margin asset
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-margin-asset-market_data" /></para>
            </summary>
            <param name="asset">The symbol to get</param>
            <param name="ct">Cancellation token</param>
            <returns>List of margin assets</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetMarginSymbolAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a margin pair
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-cross-margin-pair-market_data" /></para>
            </summary>
            <param name="symbol">The symbol to get</param>
            <param name="ct">Cancellation token</param>
            <returns>List of margin assets</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetMarginAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get all assets available for margin trading
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-all-margin-assets-market_data" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of margin assets</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetMarginSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get all asset pairs available for margin trading
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-all-cross-margin-pairs-market_data" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of margin pairs</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetMarginPriceIndexAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get margin price index
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-margin-priceindex-market_data" /></para>
            </summary>
            <param name="symbol">The symbol to get</param>
            <param name="ct">Cancellation token</param>
            <returns>Margin price index</returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetIsolatedMarginSymbolAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Isolated margin symbol info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#query-isolated-margin-symbol-user_data" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetIsolatedMarginSymbolsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Isolated margin symbol info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-all-isolated-margin-symbol-user_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetLeveragedTokenInfoAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get blvt info
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-blvt-info-market_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetLeveragedTokensHistoricalKlinesAsync(System.String,Binance.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get's historical klines
            <para><a href="https://binance-docs.github.io/apidocs/futures/en/#historical-blvt-nav-kline-candlestick" /></para>
            </summary>
            <param name="symbol">The token</param>
            <param name="interval">Kline interval</param>
            <param name="startTime">Filter by startTime</param>
            <param name="endTime">Filter by endTime</param>
            <param name="limit">Number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetLiquidityPoolsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get all swap pools
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#list-all-swap-pools-market_data" /></para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetLiquidityPoolConfigurationAsync(System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get pool config
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-pool-configure-user_data" /></para>
            </summary>
            <param name="poolId">Id of the pool</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiExchangeData.GetStakingProductsAsync(Binance.Net.Enums.StakingProductType,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get avaialble staking products list
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#get-staking-product-list-user_data" /></para>
            </summary>
            <param name="product">Product type</param>
            <param name="asset">Filter for asset</param>
            <param name="page">Page</param>
            <param name="limit">Max items per page</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiTrading">
            <summary>
            Binance Spot trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:Binance.Net.Interfaces.Clients.SpotApi.IBinanceClientSpotApiTrading.PlaceTestOrderAsync(System.String,Binance.Net.Enums.OrderSide,Binance.Net.Enums.SpotOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{Binance.Net.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Places a new test order. Test orders are not actually being executed and just test the functionality.
            <para><a href="https://binance-docs.github.io/apidocs/spot/en/#test-new-order-trade" /></para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type (limit/market)</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel)</param>
            <param name="quantity">The quantity of the symbol</param>
            <param name="quoteQuantity">The quantity of the quote symbol. Only valid for market orders</param>
            <param name="price">The price to use</param>
 